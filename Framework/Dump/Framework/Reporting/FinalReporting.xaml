<Activity mc:Ignorable="sap sap2010 sads" x:Class="FinalReporting"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="argHTMLReportTemplate" Type="InArgument(x:String)" />
    <x:Property Name="argFinalReportPath" Type="InArgument(x:String)" />
    <x:Property Name="argOutputDirectory" Type="InArgument(x:String)" />
    <x:Property Name="argProcessName" Type="InArgument(x:String)" />
    <x:Property Name="argProcessStartTime" Type="InArgument(x:String)" />
    <x:Property Name="argProcessEndTime" Type="InArgument(x:String)" />
    <x:Property Name="argLogFilePath" Type="InArgument(x:String)" />
    <x:Property Name="argProgramVersion" Type="InArgument(x:String)" />
    <x:Property Name="argEnvironment" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>FinalReporting_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="FinalReporting" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtUniqueInputs" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtFinalOutput" />
      <Variable x:TypeArguments="x:String" Name="str" />
      <Variable x:TypeArguments="x:String" Name="FinalReportText" />
      <Variable x:TypeArguments="x:String" Name="TotalInputCount" />
      <Variable x:TypeArguments="x:String" Name="TotalStepsCount" />
      <Variable x:TypeArguments="x:String" Name="SuccessPercentage" />
      <Variable x:TypeArguments="x:Int32" Name="PassCount" />
      <Variable x:TypeArguments="x:Int32" Name="FailCount" />
      <Variable x:TypeArguments="x:String" Name="HTMLString" />
      <Variable x:TypeArguments="x:String" Name="strLogfileOutput" />
      <Variable x:TypeArguments="x:String" Name="variable2" />
      <Variable x:TypeArguments="x:String" Name="FailPercentage" />
      <Variable x:TypeArguments="x:String" Name="TotalTimeSpent" />
    </Sequence.Variables>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="[argFinalReportPath]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <ui:ExcelReadRange AddHeaders="True" DataTable="[dtFinalOutput]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Sheet1">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
            <ui:AddDataColumn x:TypeArguments="x:Object" Column="{x:Null}" DefaultValue="{x:Null}" AllowDBNull="True" AutoIncrement="False" ColumnName="StepDuration" DataTable="[dtFinalOutput]" DisplayName="Add data column" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" MaxLength="100" Unique="False" />
            <ui:ForEachRow DataTable="[dtFinalOutput]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_14">
                    <If Condition="[dtFinalOutput.Rows.IndexOf(row).Equals(0)]" sap2010:WorkflowViewState.IdRef="If_9">
                      <If.Then>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_79">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Object">[row("StepDuration")]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Object">["0"]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Int32" Name="tempRowIndex" />
                          </Sequence.Variables>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_82">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[tempRowIndex]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[dtFinalOutput.Rows.IndexOf(row)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_83">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[row("StepDuration")]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Double">[(Convert.ToDateTime(row("StartTime").ToString)-Convert.ToDateTime(dtfinaloutput.Rows(temprowindex-1)("StartTime").ToString)).TotalSeconds]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <ui:ReadTextFile Content="[FinalReportText]" DisplayName="Read text file" FileName="[argHTMLReportTemplate]" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
    <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[dtUniqueInputs]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">[dtFinalOutput.DefaultView.ToTable(true, "UniqueInputID")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[PassCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[FailCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[TotalInputCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[dtUniqueInputs.Rows.Count.ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[TotalStepsCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[dtFinalOutput.Rows.Count.ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[HTMLString]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEachRow DataTable="[dtUniqueInputs]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="OutSideBody" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="dtTemp" />
              <Variable x:TypeArguments="x:Int32" Name="UniquePassCount" />
              <Variable x:TypeArguments="x:Int32" Name="UniqueFailCount" />
              <Variable x:TypeArguments="x:String" Name="tempHTMLString" />
              <Variable x:TypeArguments="x:Int32" Name="rowIndex" />
              <Variable x:TypeArguments="x:Int32" Name="TotalStepTime" />
            </Sequence.Variables>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[UniquePassCount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[UniqueFailCount]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[dtTemp]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable">[dtFinalOutput.Clone]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[dtTemp]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable">[dtFinalOutput.Select("UniqueInputID='"+row("UniqueInputID").ToString+"'").CopyToDataTable]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_66">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[TotalStepTime]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[dtTemp.Rows.Count&gt;0]" DisplayName="CountingUniqueFailPass And Total Step Time" sap2010:WorkflowViewState.IdRef="If_6">
              <If.Then>
                <ui:ForEachRow DataTable="[dtTemp]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="rowTemp" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="InsideBody" sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <If Condition="[rowTemp(&quot;PassOrFail&quot;).Equals(&quot;Pass&quot;)]" DisplayName="CountingPassFail" sap2010:WorkflowViewState.IdRef="If_5">
                          <If.Then>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[UniquePassCount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[UniquePassCount+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <If Condition="[rowTemp(&quot;PassOrFail&quot;).Equals(&quot;Fail&quot;)]" sap2010:WorkflowViewState.IdRef="If_4">
                              <If.Then>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[UniqueFailCount]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[UniqueFailCount+1]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                            </If>
                          </If.Else>
                        </If>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_81">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[TotalStepTime]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[TotalStepTime+Convert.ToInt32(rowTemp("StepDuration").ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
              </If.Then>
            </If>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[rowIndex]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[dtUniqueInputs.Rows.IndexOf(row)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["&lt;tbody id='UNIQUEIDFROMPROGRAM' onclick='activateToggle(this)'&gt;&lt;tr&gt;&lt;td&gt;UNIQUEIDFROMPROGRAM&lt;/td&gt;&lt;td&gt;STEPDESCRIPTIONFROMPROGRAM&lt;/td&gt;&lt;td Class='OUTERCLASSPASSFAILFROMPROGRAM'&gt;INPUTSTATUSFROMPROGRAM&lt;/td&gt;&lt;td&gt;TOTALNUMBEROFSTEPSFROMPROGRAM&lt;/td&gt;&lt;td&gt;TOTALSTEPSPASSEDFROMPROGRAM&lt;/td&gt;&lt;td&gt;TOTALSTEPSFAILEDFROMPROGRAM&lt;/td&gt;&lt;td&gt;ENVIRONMENTFROMPROGRAM&lt;/td&gt;&lt;td&gt;DURATIONFROMPROGRAM&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;"]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[UniqueFailCount&gt;0]" DisplayName="If Assign Status and OUTERCLASSPASSFAILFROMPROGRAM" sap2010:WorkflowViewState.IdRef="If_8">
              <If.Then>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_57">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("INPUTSTATUSFROMPROGRAM","Fail").Replace("OUTERCLASSPASSFAILFROMPROGRAM","statFailed")]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_58">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("INPUTSTATUSFROMPROGRAM","Pass").Replace("OUTERCLASSPASSFAILFROMPROGRAM","statPassed")]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <Assign DisplayName="Assign STEPDESCRIPTIONFROMPROGRAM" sap2010:WorkflowViewState.IdRef="Assign_84">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("STEPDESCRIPTIONFROMPROGRAM","Steps Involved in Processing Of "+row(0).ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign TOTALNUMBEROFSTEPSFROMPROGRAM" sap2010:WorkflowViewState.IdRef="Assign_60">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("TOTALNUMBEROFSTEPSFROMPROGRAM",dtTemp.Rows.Count.ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign TOTALSTEPSPASSEDFROMPROGRAM" sap2010:WorkflowViewState.IdRef="Assign_61">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("TOTALSTEPSPASSEDFROMPROGRAM",UniquePassCount.ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign TOTALSTEPSFAILEDFROMPROGRAM" sap2010:WorkflowViewState.IdRef="Assign_62">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("TOTALSTEPSFAILEDFROMPROGRAM",UniqueFailCount.ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign ENVIRONMENTFROMPROGRAM" sap2010:WorkflowViewState.IdRef="Assign_63">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("ENVIRONMENTFROMPROGRAM",argEnvironment)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign DURATIONFROMPROGRAM" sap2010:WorkflowViewState.IdRef="Assign_64">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("DURATIONFROMPROGRAM",TotalStepTime.ToString+"s")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="InnerTableHeader" sap2010:WorkflowViewState.IdRef="Assign_30">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[tempHTMLString+"&lt;/tbody&gt;&lt;thead id='UNIQUEIDFROMPROGRAM_Step' style='display:none'&gt;&lt;th&gt;Step Number&lt;/th&gt;&lt;th&gt;Step Name&lt;/th&gt;&lt;th&gt;Status&lt;/th&gt;&lt;th&gt;Expected&lt;/th&gt;&lt;th&gt;Actual&lt;/th&gt;&lt;th colspan='2'&gt;Stack Trace&lt;/th&gt;&lt;th&gt;Screenshot&lt;/th&gt;&lt;/thead&gt;&lt;tbody id='UNIQUEIDFROMPROGRAM_Step' style='display:none' class='mainStep'&gt;"]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign UniqueID" sap2010:WorkflowViewState.IdRef="Assign_59">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("UNIQUEIDFROMPROGRAM",row(0).ToString)]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[dtTemp.Rows.Count&gt;0]" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <ui:ForEachRow DataTable="[dtTemp]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="rowTemp" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="InsideBody" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_85">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[tempHTMLString+"&lt;tr&gt;&lt;td&gt;STEPNUMBERFROMPROGRAM&lt;/td&gt;&lt;td&gt;STEPNAMEFROMPROGRAM&lt;/td&gt;&lt;td class='INNERCLASSPASSFAILFROMPROGRAM'&gt;STEPSTATUSFROMPROGRAM&lt;/td&gt;&lt;td&gt;EXPECTEDSTEPFROMPROGRAM&lt;/td&gt;&lt;td&gt;ACTUALSTEPFROMPROGRAM&lt;/td&gt;&lt;td colspan='2'&gt;STACKTRACEFROMPROGRAM&lt;/td&gt;&lt;td&gt;&lt;a href='#' onclick='showModal(this, ""SCREENSHOTPATHFROMPROGRAM"")'&gt;View Screenshot&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;"]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign STEPNUMBERFROMPROGRAM" sap2010:WorkflowViewState.IdRef="Assign_67">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("STEPNUMBERFROMPROGRAM",dtTemp.Rows.IndexOf(rowTemp).ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign STEPNAMEFROMPROGRAM" sap2010:WorkflowViewState.IdRef="Assign_68">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("STEPNAMEFROMPROGRAM",rowTemp("Description").ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign STEPNAMEFROMPROGRAM" sap2010:WorkflowViewState.IdRef="Assign_69">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("STEPNAMEFROMPROGRAM",rowTemp("Description").ToString)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign SCREENSHOTPATHFROMPROGRAM" sap2010:WorkflowViewState.IdRef="Assign_78">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("SCREENSHOTPATHFROMPROGRAM",rowTemp("Screenshot").ToString.Replace("\","\\"))]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[rowTemp(&quot;PassOrFail&quot;).Equals(&quot;Pass&quot;)]" DisplayName="CountingPassFail" sap2010:WorkflowViewState.IdRef="If_2">
                          <If.Then>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[UniquePassCount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[UniquePassCount+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[PassCount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[PassCount+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <If Condition="[rowTemp(&quot;PassOrFail&quot;).Equals(&quot;Fail&quot;)]" sap2010:WorkflowViewState.IdRef="If_3">
                              <If.Then>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[UniqueFailCount]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[UniqueFailCount]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[FailCount]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[FailCount+1]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                            </If>
                          </If.Else>
                        </If>
                        <If Condition="[rowTemp(&quot;PassOrFail&quot;).Equals(&quot;Pass&quot;)]" DisplayName="If Exception Message Found" sap2010:WorkflowViewState.IdRef="If_7">
                          <If.Then>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
                              <Assign DisplayName="InnerTableData" sap2010:WorkflowViewState.IdRef="Assign_73">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("INNERCLASSPASSFAILFROMPROGRAM","statPassed").Replace("STEPSTATUSFROMPROGRAM","Pass")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign EXPECTEDSTEPFROMPROGRAM" sap2010:WorkflowViewState.IdRef="Assign_77">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("STACKTRACEFROMPROGRAM",rowTemp("ExceptionMessage").ToString).Replace("EXPECTEDSTEPFROMPROGRAM",rowTemp("StepDetails").ToString).Replace("ACTUALSTEPFROMPROGRAM",rowTemp("StepDetails").ToString)]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13">
                              <Assign DisplayName="InnerTableData" sap2010:WorkflowViewState.IdRef="Assign_74">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("INNERCLASSPASSFAILFROMPROGRAM","statFailed").Replace("STEPSTATUSFROMPROGRAM","Fail")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Assign EXPECTEDSTEPFROMPROGRAM" sap2010:WorkflowViewState.IdRef="Assign_76">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[tempHTMLString]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[tempHTMLString.Replace("STACKTRACEFROMPROGRAM",rowTemp("ExceptionMessage").ToString).Replace("EXPECTEDSTEPFROMPROGRAM",rowTemp("StepDetails").ToString).Replace("ACTUALSTEPFROMPROGRAM","Error in "+rowTemp("StepDetails").ToString)]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
              </If.Then>
            </If>
            <Assign DisplayName="AddingInnerTableData" sap2010:WorkflowViewState.IdRef="Assign_31">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[HTMLString]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[HTMLString+tempHTMLString]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <Assign DisplayName="Assign Main HTML String" sap2010:WorkflowViewState.IdRef="Assign_32">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FinalReportText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[FinalReportText.Replace("HTMLSTRINGFROMPROGRAM", HTMLString)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Total Number Of Steps" sap2010:WorkflowViewState.IdRef="Assign_10">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FinalReportText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[FinalReportText.Replace("OVERALLNUMBEROFSTEPSFROMPROGRAM",TotalStepsCount)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Pass Steps" sap2010:WorkflowViewState.IdRef="Assign_52">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FinalReportText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[FinalReportText.Replace("PASSEDSTEPSFROMPROGRAM",PassCount.ToString)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Fail Steps" sap2010:WorkflowViewState.IdRef="Assign_53">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FinalReportText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[FinalReportText.Replace("FAILEDSTEPSFROMPROGRAM",FailCount.ToString)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_55">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[TotalTimeSpent]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[System.Math.Abs((Convert.ToDateTime(argProcessEndTime) - Convert.ToDateTime(argProcessStartTime)).TotalSeconds).ToString+"s"]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Total Execution Time" sap2010:WorkflowViewState.IdRef="Assign_54">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FinalReportText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[FinalReportText.Replace("TOTALTIMESPENTFROMPROGRAM",TotalTimeSpent)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[SuccessPercentage]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Math.Round(Convert.ToInt32(PassCount)/Convert.ToInt32(TotalStepsCount)*100, 2).ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_51">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FailPercentage]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[Math.Round(Convert.ToInt32(FailCount)/Convert.ToInt32(TotalStepsCount)*100, 2).ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Successs Percentage" sap2010:WorkflowViewState.IdRef="Assign_15">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FinalReportText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[FinalReportText.Replace("PASSPERCENTAGEFROMPROGRAM",SuccessPercentage)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Fail Percentage" sap2010:WorkflowViewState.IdRef="Assign_50">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FinalReportText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[FinalReportText.Replace("FAILPERCENTAGEFROMPROGRAM",FailPercentage)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Process Name" sap2010:WorkflowViewState.IdRef="Assign_42">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FinalReportText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[FinalReportText.Replace("PROCESSNAMEFROMPROGRAM",argProcessName)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Program Version" sap2010:WorkflowViewState.IdRef="Assign_43">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FinalReportText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[FinalReportText.Replace("EXECUTIONIDFROMPROGRAM","Exec_"+Convert.ToDateTime(argProcessStartTime).ToString("MM-dd-yyyy_HH.mm.ss")).Replace("PROCESSNAMEWITHVVERSIONFROMPROGRAM", argProgramVersion)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_44">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FinalReportText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[FinalReportText.Replace("PROCESSENDTIMEFROMPROGRAM",argProcessEndTime)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_45">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FinalReportText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[FinalReportText.Replace("LOGFILEPATHFROMPROOGRAM",argLogFilePath)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_46">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FinalReportText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[FinalReportText.Replace("TitleToBeReplacedFromProgram","Detailed Report For "+argProcessName)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ReadTextFile Content="[strLogfileOutput]" DisplayName="Read text file" FileName="[argLogFilePath]" sap2010:WorkflowViewState.IdRef="ReadTextFile_2" />
    <Assign sap2010:WorkflowViewState.IdRef="Assign_47">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[FinalReportText]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[FinalReportText.Replace("LOGFILEPATHFROMPROGRAM",argLogFilePath).Replace("ALLSTEPSFROMPROGRAM",strLogfileOutput)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:WriteTextFile DisplayName="Write text file" FileName="[argOutputDirectory+&quot;\FinalReport.html&quot;]" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[FinalReportText]" />
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ExcelReadRange_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="AddDataColumn`1_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Assign_79" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_82" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_83" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="531,432" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="553,556">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_4" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="605,336">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="982,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadTextFile_1" sap:VirtualizedContainerService.HintSize="982,59" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_66" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="264,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,332" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="753,480">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_81" sap:VirtualizedContainerService.HintSize="753,60" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="775,704">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_3" sap:VirtualizedContainerService.HintSize="805,852">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="930,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="930,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_84" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_60" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_61" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_62" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_63" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_64" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_59" sap:VirtualizedContainerService.HintSize="930,60" />
      <sap2010:ViewStateData Id="Assign_85" sap:VirtualizedContainerService.HintSize="753,60" />
      <sap2010:ViewStateData Id="Assign_67" sap:VirtualizedContainerService.HintSize="753,60" />
      <sap2010:ViewStateData Id="Assign_68" sap:VirtualizedContainerService.HintSize="753,60" />
      <sap2010:ViewStateData Id="Assign_69" sap:VirtualizedContainerService.HintSize="753,60" />
      <sap2010:ViewStateData Id="Assign_78" sap:VirtualizedContainerService.HintSize="753,60" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="464,432" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="753,580">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_73" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_77" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_74" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_76" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="775,1295">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_2" sap:VirtualizedContainerService.HintSize="805,1443">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="930,1591">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="952,3497">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="982,3645">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_53" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_55" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_51" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_50" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_43" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="ReadTextFile_2" sap:VirtualizedContainerService.HintSize="982,59" />
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="982,60" />
      <sap2010:ViewStateData Id="WriteTextFile_1" sap:VirtualizedContainerService.HintSize="982,87" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="1004,2791">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FinalReporting_1" sap:VirtualizedContainerService.HintSize="1044,2871" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>