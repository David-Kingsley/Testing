<Activity mc:Ignorable="sap sap2010 sads" x:Class="Logging"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_argLogFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_argLogMessage" Type="InArgument(x:String)" />
    <x:Property Name="in_argLogLevel" Type="InArgument(x:String)" />
    <x:Property Name="in_argOutputDirectory" Type="InArgument(x:String)" />
    <x:Property Name="in_argUniqueInputID" Type="InArgument(x:String)" />
    <x:Property Name="in_argStepDetailDescription" Type="InArgument(x:String)" />
    <x:Property Name="in_argExceptionMessage" Type="InArgument(x:String)" />
    <x:Property Name="inOut_argDTFinalOutPut" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_ScreenShotNeeded" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Logging_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Logging" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="PreviousLog" />
      <Variable x:TypeArguments="x:String" Name="CurrentLogMessage" />
      <Variable x:TypeArguments="x:String" Name="ScreenShot" />
      <Variable x:TypeArguments="ui:Image" Name="ScreenShotImage" />
      <Variable x:TypeArguments="x:String" Name="Status" />
    </Sequence.Variables>
    <If sap2010:Annotation.AnnotationText="Checking the level of log" Condition="[in_argLogLevel.Equals(&quot;Error&quot;)]" DisplayName="Passing Log Message To Orchestartor" sap2010:WorkflowViewState.IdRef="If_4">
      <If.Then>
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;Step: &quot;+in_argLogMessage+&quot; Detail: &quot;+in_argStepDetailDescription]" />
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot; Step: &quot;+in_argLogMessage+&quot; Detail: &quot;+in_argStepDetailDescription]" />
      </If.Else>
    </If>
    <If sap2010:Annotation.AnnotationText="Taking and saving screenshot taken at the time of logging" Condition="[Directory.Exists(in_argOutputDirectory)]" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
          <If Condition="[in_argLogLevel.Equals(&quot;Error&quot;)]" DisplayName="Setting Status" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[Status]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Fail</InArgument>
                </Assign.Value>
              </Assign>
            </If.Then>
            <If.Else>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[Status]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Pass</InArgument>
                </Assign.Value>
              </Assign>
            </If.Else>
          </If>
          <TryCatch DisplayName="Writing Log File" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <TryCatch.Try>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                <If Condition="[File.Exists(in_argLogFilePath)]" DisplayName="WriteLogFile" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
                      <ui:ReadTextFile Content="[PreviousLog]" DisplayName="Read text file" FileName="[in_argLogFilePath]" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[CurrentLogMessage]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[PreviousLog+Environment.NewLine+"-------------------------"+Environment.NewLine+"Message Logged at: "+DateTime.Now.ToString("dd-MM-yyyy HH:mm:ss")+"|     |"+" For: "+in_argUniqueInputID+"|     |"+"Log Level:"+in_argLogLevel+"|     |"+in_argLogMessage+"|     |"+"Step Detail: "+in_argStepDetailDescription+"|     |"+"Exception: "+in_argExceptionMessage]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:WriteTextFile DisplayName="Write text file" FileName="[in_argLogFilePath]" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[CurrentLogMessage]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[CurrentLogMessage]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String" xml:space="preserve">["Message Logged at: "+DateTime.Now.ToString("dd-MM-yyyy HH:mm:ss")+"|     |"+" For: "+in_argUniqueInputID+"|     |"+"Log Level:"+in_argLogLevel+"|     |"+in_argLogMessage+"|     |"+"Step Detail: "+in_argStepDetailDescription+"|     |"+"Exception: "+in_argExceptionMessage]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:WriteTextFile DisplayName="Write text file" FileName="[in_argLogFilePath]" sap2010:WorkflowViewState.IdRef="WriteTextFile_3" Text="[CurrentLogMessage]" />
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Error" Message="[&quot;Logging Failure for: &quot;+in_argLogMessage]" />
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Message: &quot;+&quot;Message Logged at: &quot;+DateTime.Now.ToString(&quot;dd-MM-yyyy HH:mm:ss&quot;)+&quot;|     |&quot;+&quot; For: &quot;+in_argUniqueInputID+&quot;|     |&quot;+&quot;Log Level:&quot;+in_argLogLevel+&quot;|     |&quot;+in_argLogMessage+&quot;|     |&quot;+&quot;Step Detail: &quot;+in_argStepDetailDescription+&quot;|     |&quot;+&quot;Exception: &quot;+in_argExceptionMessage]" />
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Error" Message="[&quot;Exception Details: &quot;+&quot; Source: &quot;+exception.Source+&quot; Message: &quot;+exception.Message+&quot; Stack Trace:&quot;+exception.StackTrace]" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <If Condition="[in_ScreenShotNeeded]" DisplayName="ScreenShot" sap2010:WorkflowViewState.IdRef="If_13">
            <If.Then>
              <TryCatch DisplayName="Taking Screenshot" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                <TryCatch.Try>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\Logging\TakeScreenshot.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_argOutputDirectory">[in_argOutputDirectory]</InArgument>
                      <InOutArgument x:TypeArguments="x:String" x:Key="in_argUniqueInputID">[in_argUniqueInputID]</InOutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_argLogMessage">[in_argLogMessage]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_ScreenshotPath">[ScreenShot]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Screenshot Failure for: &quot;+in_argLogMessage]" />
                        <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;Exception Details: &quot;+&quot; Source: &quot;+exception.Source+&quot; Message: &quot;+exception.Message+&quot; Stack Trace:&quot;+exception.StackTrace]" />
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </If.Then>
            <If.Else>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[ScreenShot]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Not required</InArgument>
                </Assign.Value>
              </Assign>
            </If.Else>
          </If>
          <If sap2010:Annotation.AnnotationText="Adding the log meesage in final output datatable for reporting" Condition="[NOT(string.IsNullOrEmpty(in_argUniqueInputID))]" DisplayName="Adding the log meesage in final output datatable for reporting" sap2010:WorkflowViewState.IdRef="If_12">
            <If.Then>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_12">
                <If Condition="[NOT(in_argLogLevel.Equals(&quot;Error&quot;))]" sap2010:WorkflowViewState.IdRef="If_11">
                  <If.Then>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{in_argUniqueInputID, in_argLogMessage,Status, ScreenShot, DateTime.Now.ToString(&quot;MM-dd-yyyy HH:mm:ss&quot;),in_argStepDetailDescription,&quot;NA&quot;}]" DataTable="[inOut_argDTFinalOutPut]" DisplayName="Add data row" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                  </If.Then>
                  <If.Else>
                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{in_argUniqueInputID, in_argLogMessage,Status, ScreenShot, DateTime.Now.ToString(&quot;MM-dd-yyyy HH:mm:ss&quot;),in_argStepDetailDescription,in_argExceptionMessage}]" DataTable="[inOut_argDTFinalOutPut]" DisplayName="Add data row" sap2010:WorkflowViewState.IdRef="AddDataRow_4" />
                  </If.Else>
                </If>
              </Sequence>
            </If.Then>
          </If>
        </Sequence>
      </If.Then>
    </If>
    <sads:DebugSymbol.Symbol>d1lDOlxVc2Vyc1xTdXJlc2hQYXRlbFxEb2N1bWVudHNcVWlQYXRoXFJQQUZyYW1lV29ya1ZlcnNpb24zXEZyYW1ld29ya1xMb2dnaW5nXExvZ2dpbmcueGFtbEhXA+oBDgIBAV8FZgoCAWJnBegBCgIBAl9RX30CAWNhCWHTAQIBaWQJZNMBAgFlZ3FnnAECAQNpCeYBFAIBBGF3YdABAgFqZHZk0AECAWZqC38QAgFXgAELsAEWAgEvsQEL1wEQAgEU2AEL5QEQAgEFahlqRQIBWGwPcxgCAV52D30YAgFaggEPoAEaAgE7qAETrAEeAgEwsQEZsQEwAgEVswEPywEaAgEbzgEP1QEYAgEX2AF82AGuAQIBBtoBD+MBGgIBCHE6cT4CAWFuO25DAgFfezp7PgIBXXg7eEMCAVuDARGfARYCATypARWpAbwBAgE4qgEVqgGcBAIBNqsBFasBqAICATG1ARO8ASsCASXEARfHASICARzTATrTAUYCARrQATvQAUcCARjbARHiARYCAQmDAR+DAUECAT2FARWQASACAUiTARWdASACAT6pAYMBqQG5AQIBOaoBggGqAZkEAgE3qwGDAasBpQICATK6AVq6AWYCAS23AVy3AXMCASu4AV24AXICASm1Ab8BtQHmAQIBKLkBV7kBaQIBJsUBGcUBwwECASLGARnGAawCAgEd2wEf2wFQAgEK3QEV3QHTAgIBEOABFeAB2wICAQyGAReGAa8BAgFShwEXjgEgAgFOjwEXjwG1AQIBSZQBF5sBIAIBRJwBF5wBtQECAT/FAYcBxQHAAQIBI8YBhwHGAakCAgEe3QHsAd0BhgICARLdAUDdAeEBAgER4AH0AeABjgICAQ7gAUDgAekBAgENhgFmhgF7AgFVhgEwhgE/AgFTiQFDiQFWAgFPjwGdAY8BsgECAUyPAVCPAWUCAUqWAUOWAVYCAUWcAZ0BnAGyAQIBQpwBUJwBZQIBQA==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadTextFile_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteTextFile_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="336,410">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="WriteTextFile_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="336,311">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="697,558">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="719,682">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_7" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="336,477">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="723,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="737,909">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="336,346">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_2" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_2" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataRow_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddDataRow_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="464,208" />
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="486,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="222,448">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="464,623">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="486,865">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Logging_1" sap:VirtualizedContainerService.HintSize="526,945" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>