<Activity mc:Ignorable="sap sap2010 sads" x:Class="SendExceptionEmail"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="argMailList" Type="InArgument(x:String)" />
    <x:Property Name="argMailSubject" Type="InArgument(x:String)" />
    <x:Property Name="argMailBody" Type="InArgument(x:String)" />
    <x:Property Name="argMailTemplatePath" Type="InArgument(x:String)" />
    <x:Property Name="argOutputDirectory" Type="InArgument(x:String)" />
    <x:Property Name="argEmailUsername" Type="InArgument(x:String)" />
    <x:Property Name="argEmailPassword" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>SendExceptionEmail_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SendExceptionEmail" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="TemplateText" />
      <Variable x:TypeArguments="ui:Image" Name="ScreenShotImage" />
      <Variable x:TypeArguments="x:String" Name="ScreenShot" />
    </Sequence.Variables>
    <If sap2010:Annotation.AnnotationText="Checking for exception email template. If present we will take the screenshot and will send the exception email. Otherwise directly send exception email with exception message" Condition="[NOT(string.IsNullOrEmpty(argMailTemplatePath))]" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ScreenShot]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[argOutputDirectory+"\ScreenshotsError\"]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[NOT(Directory.Exists(ScreenShot))]" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create directory" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[ScreenShot]" />
            </If.Then>
          </If>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[ScreenShot]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[ScreenShot+"\Screenshot_"+DateTime.Now.ToString("ddMMyyyyHHmmss")+".png"]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:TakeScreenshot WaitBefore="{x:Null}" DisplayName="Take screenshot" sap2010:WorkflowViewState.IdRef="TakeScreenshot_1" Screenshot="[ScreenShotImage]">
            <ui:TakeScreenshot.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
            </ui:TakeScreenshot.Target>
          </ui:TakeScreenshot>
          <ui:SaveImage DisplayName="Save image" FileName="[ScreenShot]" sap2010:WorkflowViewState.IdRef="SaveImage_1" Image="[ScreenShotImage]" />
          <ui:ReadTextFile Content="[TemplateText]" DisplayName="Read text file" FileName="[argMailTemplatePath]" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
          <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[TemplateText]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[TemplateText.Replace("MAINEXCEPTIONMESSAGE", argMailBody)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[TemplateText]" DisplayName="Send SMTP Mail Message" Email="[argEmailUsername]" EnableSSL="True" sap2010:WorkflowViewState.IdRef="SendMail_1" IsBodyHtml="True" Password="[argEmailPassword]" Port="587" SecureConnection="Auto" Server="smtp.gmail.com" Subject="[argMailSubject]" To="[argMailList]">
            <ui:SendMail.Files>
              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                <InArgument x:TypeArguments="x:String">[ScreenShot]</InArgument>
              </scg:List>
            </ui:SendMail.Files>
          </ui:SendMail>
        </Sequence>
      </If.Then>
      <If.Else>
        <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[TemplateText]" DisplayName="Send SMTP Mail Message" Email="[argEmailUsername]" EnableSSL="True" sap2010:WorkflowViewState.IdRef="SendMail_2" IsBodyHtml="True" Password="[argEmailPassword]" Port="587" SecureConnection="Auto" Server="smtp.gmail.com" Subject="[argMailSubject]" To="[argMailList]">
          <ui:SendMail.Files>
            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
          </ui:SendMail.Files>
        </ui:SendMail>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>dzdDOlxGaW5hbmNlXEZyYW1ld29ya1xFeGNlcHRpb25zXFNlbmRFeGNlcHRpb25FbWFpbC54YW1sKkcDhgEOAgEBTQWEAQoCAQJN5wFNmQICAQNPCXsUAgESfgmCARcCAQVQC1cUAgE+WAtcEAIBOV0LZBQCATVlC2kfAgEyagtqlAECAS1rC2umAQIBKGwLcxQCASJ0C3oZAgETfpwDfqsDAgEQfoQBfpQBAgEOfoYDfpgDAgEMfsABftQBAgEKfsgCfs0CAgEJfu0Cfv0CAgEIfq4CfsICAgEGVTZVXwIBQVI3UkMCAT9YGVg+AgE6Wg9apwECATtiNmKAAQIBOF83X0MCATZlkAFlowECATNqO2pJAgEwan5qkQECAS5rW2tyAgErayRrNAIBKXE2cXECASVuN25FAgEjdJ4DdK0DAgEgdzh3RAIBHnSGAXSWAQIBHHSIA3SaAwIBGnTCAXTWAQIBGHTKAnTPAgIBF3TvAnT/AgIBFnSwAnTEAgIBFFqWAVqkAQIBPA==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="CreateDirectory_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="TakeScreenshot_1" sap:VirtualizedContainerService.HintSize="314,68" />
      <sap2010:ViewStateData Id="SaveImage_1" sap:VirtualizedContainerService.HintSize="314,92" />
      <sap2010:ViewStateData Id="ReadTextFile_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="SendMail_1" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="336,999">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendMail_2" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="675,1189">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="697,1313">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendExceptionEmail_1" sap:VirtualizedContainerService.HintSize="737,1393" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>