<Activity mc:Ignorable="sap sap2010" x:Class="GetDetailsFromMT942" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Arg_inConfig" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="Arg_inFile" Type="InArgument(x:String)" />
    <x:Property Name="Arg_inoutMappingTable" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="Arg_inRegion" Type="InArgument(x:String)" />
    <x:Property Name="Arg_inDBDataSource" Type="InArgument(x:String)" />
    <x:Property Name="Arg_inUsername" Type="InArgument(x:String)" />
    <x:Property Name="Arg_inPassword" Type="InArgument(x:String)" />
    <x:Property Name="Arg_inAllDataTable" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="Arg_inEmailDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="Arg_inSuccessEmailID" Type="InArgument(x:String)" />
    <x:Property Name="Arg_inEmailID" Type="InArgument(x:String)" />
    <x:Property Name="Arg_inEmailPassword" Type="InArgument(x:String)" />
    <x:Property Name="Arg_inProcessStartTime" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1571,7432</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetDetailsFromMT942_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Globalization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="GetDetailsFromMT942" sap:VirtualizedContainerService.HintSize="1581,7367" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="TextContents" />
      <Variable x:TypeArguments="x:Boolean" Name="CreditFlag" />
      <Variable x:TypeArguments="x:Object" Name="CountOfPayment" />
      <Variable x:TypeArguments="x:Object" Name="Currency" />
      <Variable x:TypeArguments="s:String[]" Name="Payments" />
      <Variable x:TypeArguments="x:Int32" Name="TotalPayments" />
      <Variable x:TypeArguments="sd:DataTable" Name="CountofPaymentDT" />
      <Variable x:TypeArguments="x:Boolean" Name="FinalCreditFlag" />
      <Variable x:TypeArguments="x:String" Name="status" />
      <Variable x:TypeArguments="x:Int32" Name="LockboxCreditCount" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ReadTextFile Content="[TextContents]" DisplayName="Read Text File" FileName="[Arg_inFile]" sap:VirtualizedContainerService.HintSize="1539,132" sap2010:WorkflowViewState.IdRef="ReadTextFile_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ReadTextFile>
    <Assign sap:VirtualizedContainerService.HintSize="1539,60" sap2010:WorkflowViewState.IdRef="Assign_36">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[FinalCreditFlag]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1539,60" sap2010:WorkflowViewState.IdRef="Assign_13">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[CreditFlag]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Split by Start of block" sap:VirtualizedContainerService.HintSize="1539,60" sap2010:WorkflowViewState.IdRef="Assign_11">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[Payments]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[TextContents.Split({""+Arg_inConfig("Start of block").ToString+""},StringSplitOptions.None)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="1539,60" sap2010:WorkflowViewState.IdRef="Assign_34">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[TotalPayments]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign LockBoxCredit Count" sap:VirtualizedContainerService.HintSize="1539,60" sap2010:WorkflowViewState.IdRef="Assign_43">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[LockboxCreditCount]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">0</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1539,5600" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[Payments]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="Payment" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1503,5466" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign Creditflag" sap:VirtualizedContainerService.HintSize="1461,60" sap2010:WorkflowViewState.IdRef="Assign_14">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">[CreditFlag]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[System.Text.RegularExpressions.Regex.IsMatch(Payment,&quot;&quot;+Arg_inConfig(&quot;Identify Credit&quot;).ToString+&quot;&quot;,System.Text.RegularExpressions.RegexOptions.Multiline)]" sap:VirtualizedContainerService.HintSize="1461,208" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[CreditFlag]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
            <If Condition="[CreditFlag]" DisplayName="If Credit is present" sap:VirtualizedContainerService.HintSize="1461,5026" sap2010:WorkflowViewState.IdRef="If_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="1316,4878" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:Object" Name="TotalCreditAmount" />
                    <Variable x:TypeArguments="s:String[]" Name="Credits" />
                    <Variable x:TypeArguments="x:Object" Name="BankAccountNo" />
                    <Variable x:TypeArguments="x:Object" Name="CustNo" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign sap:VirtualizedContainerService.HintSize="1274,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[FinalCreditFlag]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Get BankAccount No" sap:VirtualizedContainerService.HintSize="1274,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[BankAccountNo]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(Payment,""+Arg_inConfig("Bank Account Number").ToString+"",System.Text.RegularExpressions.RegexOptions.Multiline).ToString.Split(":"c)(2)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Get Count of Payment" sap:VirtualizedContainerService.HintSize="1274,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[CountOfPayment]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="str:Match">[System.Text.RegularExpressions.Regex.Match(Payment,""+Arg_inConfig("Count of Payment").ToString+"\d+",System.Text.RegularExpressions.RegexOptions.Multiline)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Get Count of Payment" sap:VirtualizedContainerService.HintSize="1274,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[CountOfPayment]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[CountOfPayment.ToString.Substring(CountOfPayment.ToString.IndexOf(""+Arg_inConfig("Count of Payment").ToString+"")+Arg_inConfig("Count of Payment").ToString.Length)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1274,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[CountOfPayment.ToString]" />
                  <Assign sap:VirtualizedContainerService.HintSize="1274,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[TotalPayments]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[TotalPayments+Convert.ToInt32(CountOfPayment.ToString.TrimStart("0"c))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Get TotalCredit Amount" sap:VirtualizedContainerService.HintSize="1274,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[TotalCreditAmount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Split(System.Text.RegularExpressions.Regex.Match(Payment,""+Arg_inConfig("Total Credit Amount").ToString+"",System.Text.RegularExpressions.RegexOptions.Multiline).ToString,"[A-Z]{2,3}")(1)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Get Currency" sap:VirtualizedContainerService.HintSize="1274,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[Currency]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(Payment,""+Arg_inConfig("Receipt Currency").ToString+"[A-Z]+",System.Text.RegularExpressions.RegexOptions.Multiline).ToString.Split({""+Arg_inConfig("Receipt Currency").ToString+""},StringSplitOptions.None)(1)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="1274,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:String[]">[Credits]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[System.Text.RegularExpressions.Regex.Split(Payment,""+Arg_inConfig("Identify Multiple Payments").ToString+"",System.Text.RegularExpressions.RegexOptions.Multiline)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Credit" sap:VirtualizedContainerService.HintSize="1274,3855" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Credits]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="Credit" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1238,3721" sap2010:WorkflowViewState.IdRef="Sequence_3">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Object" Name="ReceiptAmount" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[System.Text.RegularExpressions.Regex.IsMatch(Credit.Trim,&quot;&quot;+Arg_inConfig(&quot;Identify Multiple Credit&quot;).ToString+&quot;&quot;,System.Text.RegularExpressions.RegexOptions.Multiline) AND NOT System.Text.RegularExpressions.Regex.IsMatch(Credit,&quot;&quot;+Arg_inConfig(&quot;Identify Check&quot;).ToString+&quot;&quot;,System.Text.RegularExpressions.RegexOptions.Multiline)]" sap:VirtualizedContainerService.HintSize="1196,3629" sap2010:WorkflowViewState.IdRef="If_3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="667,3481" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:Object" Name="ReceiptNo" />
                                  <Variable x:TypeArguments="x:Object" Name="ReceiptDate" />
                                  <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="CustName" />
                                  <Variable x:TypeArguments="sd:DataRow" Name="i" />
                                  <Variable x:TypeArguments="x:Int32" Name="j" />
                                  <Variable x:TypeArguments="x:Object" Name="CustomerName" />
                                  <Variable x:TypeArguments="s:String[]" Name="CustomerNameMatchArray" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Get Receipt Amount" sap:VirtualizedContainerService.HintSize="625,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[ReceiptAmount]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(Credit,""+Arg_inConfig("Receipt Amount").ToString.Split("&amp;"c)(0)+"",System.Text.RegularExpressions.RegexOptions.Multiline).Tostring.Split({""+Arg_inConfig("Receipt Amount").ToString.Split("&amp;"c)(1)+""},StringSplitOptions.None)(1)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Get ReceiptNo" sap:VirtualizedContainerService.HintSize="625,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[ReceiptNo]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(Credit,""+Arg_inConfig("Receipt Number").ToString+"",System.Text.RegularExpressions.RegexOptions.Multiline).ToString.Split({"//"},StringSplitOptions.None)(1)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Get ReceiptDate" sap:VirtualizedContainerService.HintSize="625,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[ReceiptDate]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="str:Match">[System.Text.RegularExpressions.Regex.Match(Credit,""+Arg_inConfig("Receipt Date").ToString+"",System.Text.RegularExpressions.RegexOptions.Multiline)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="625,60" sap2010:WorkflowViewState.IdRef="Assign_31">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:String[]">[CustomerNameMatchArray]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:String[]">[Arg_inConfig("Customer Name").ToString.Split(","c)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap:VirtualizedContainerService.HintSize="625,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[j]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <DoWhile DisplayName="Do While" sap:VirtualizedContainerService.HintSize="625,513" sap2010:WorkflowViewState.IdRef="DoWhile_1" Condition="[(IsNothing(CustName(0))) AND j&lt;=CustomerNameMatchArray.Count-1]">
                                  <Sequence DisplayName="Find Customer Name" sap:VirtualizedContainerService.HintSize="376,351" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:Matches BuilderPattern="abc" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[Credit.Replace(Environment.NewLine,&quot;&quot;)]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;abc&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="abc" RegexOption="IgnoreCase" Result="[CustName]">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:Matches>
                                    <Assign DisplayName="Get Customer Name" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[CustomerName]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Object">[CustName(0)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[j]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[j+1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </DoWhile>
                                <If Condition="[IsNothing(CustName(0))]" DisplayName="If customer name is nothing" sap:VirtualizedContainerService.HintSize="625,719" sap2010:WorkflowViewState.IdRef="If_5">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="480,571" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,479" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <TryCatch.Try>
                                          <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="sd:DataRow" Name="CustomerRow" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="sd:DataRow">[CustomerRow]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="sd:DataRow">[Arg_inoutMappingTable.Select.AsEnumerable().Where(Function(row) System.Text.RegularExpressions.Regex.IsMatch(Credit.Split({":86:"},StringSplitOptions.None)(1).Replace(Environment.NewLine,"").ToLower,row(1).ToString.ToLower))(0)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[CustomerName]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[CustomerRow(1).ToString.Trim]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </TryCatch.Try>
                                        <TryCatch.Catches>
                                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ActivityAction x:TypeArguments="s:Exception">
                                              <ActivityAction.Argument>
                                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                              </ActivityAction.Argument>
                                              <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Object">[CustomerName]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Object">[DBNull.Value]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </ActivityAction>
                                          </Catch>
                                        </TryCatch.Catches>
                                      </TryCatch>
                                    </Sequence>
                                  </If.Then>
                                </If>
                                <Assign sap:VirtualizedContainerService.HintSize="625,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[status]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <TryCatch DisplayName="If Cut No not present in Mapping Table" sap:VirtualizedContainerService.HintSize="625,479" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch.Try>
                                    <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="sd:DataRow">[i]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="sd:DataRow">[Arg_inoutMappingTable.Select.AsEnumerable().Where(Function(row) System.Text.RegularExpressions.Regex.IsMatch(CustomerName.tostring.Trim,row(1).ToString.Trim+"$",System.Text.RegularExpressions.RegexOptions.Multiline))(0)]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[CustNo]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[i(0).ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </TryCatch.Try>
                                  <TryCatch.Catches>
                                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ActivityAction x:TypeArguments="s:Exception">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                        </ActivityAction.Argument>
                                        <Sequence sap:VirtualizedContainerService.HintSize="304,246" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Object">[CustNo]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Object">[DBNull.Value]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[status]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">Exception</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ActivityAction>
                                    </Catch>
                                  </TryCatch.Catches>
                                </TryCatch>
                                <If Condition="[IsNothing(i)]" sap:VirtualizedContainerService.HintSize="625,208" sap2010:WorkflowViewState.IdRef="If_4">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[CustNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Object">[DBNull.Value]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Then>
                                </If>
                                <Sequence DisplayName="Date Converter" sap:VirtualizedContainerService.HintSize="625,552" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="yy" />
                                    <Variable x:TypeArguments="x:String" Name="mm" />
                                    <Variable x:TypeArguments="x:String" Name="dd" />
                                  </Sequence.Variables>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[yy]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[ReceiptDate.ToString.Substring(0,2)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[yy]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">["20"+yy.Trim]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[mm]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[ReceiptDate.ToString.Substring(2,2)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[dd]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[ReceiptDate.ToString.Substring(4,2)]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Object">[ReceiptDate]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Object">[mm+"/"+dd+"/"+yy]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Insert Records in Database" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="625,118" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="DatabaseOperations\InsertIntoPaymentMasterTable.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:Object" x:Key="CustomerName">[CustomerName.ToString.Trim]</InArgument>
                                    <InArgument x:TypeArguments="x:Object" x:Key="ReceiptNo">[ReceiptNo]</InArgument>
                                    <InArgument x:TypeArguments="x:Object" x:Key="CustNo">[""]</InArgument>
                                    <InArgument x:TypeArguments="x:Object" x:Key="ReceiptAmount">[ReceiptAmount.ToString.Replace(",",".")]</InArgument>
                                    <InArgument x:TypeArguments="x:Object" x:Key="ReceiptDate">[Convert.ToDateTime(ReceiptDate)]</InArgument>
                                    <InArgument x:TypeArguments="x:Object" x:Key="Currency">[Currency]</InArgument>
                                    <InArgument x:TypeArguments="x:Object" x:Key="TotalCreditAmount">[TotalCreditAmount.ToString.Replace(",",".")]</InArgument>
                                    <InArgument x:TypeArguments="x:Object" x:Key="BankAccountNo">[BankAccountNo]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="Arg_inFile">[Arg_inFile]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="Arg_inRegion">[Arg_inRegion]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="Arg_inUsername">[Arg_inUsername]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="Arg_inPassword">[Arg_inPassword]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="Arg_inDBDataSource">[Arg_inDBDataSource]</InArgument>
                                    <InArgument x:TypeArguments="x:Object" x:Key="CountofPayment">[CountOfPayment]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="Arg_inPaymentType">Wire</InArgument>
                                    <InOutArgument x:TypeArguments="sd:DataTable" x:Key="Arg_inAllDataTable">[Arg_inAllDataTable]</InOutArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="Arg_inStatus">[status]</InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <If Condition="[System.Text.RegularExpressions.Regex.IsMatch(Credit,&quot;&quot;+Arg_inConfig(&quot;Identify Check&quot;).ToString+&quot;&quot;,System.Text.RegularExpressions.RegexOptions.Multiline)]" DisplayName="Check for LockBox Credit" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_8">
                                <If.Then>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[LockboxCreditCount]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[LockboxCreditCount+1]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                              </If>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <If Condition="[FinalCreditFlag]" DisplayName="If Credit is not present" sap:VirtualizedContainerService.HintSize="1539,277" sap2010:WorkflowViewState.IdRef="If_7">
      <If.Else>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This sequence is used to send email if credit is not present" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="EmailOperations\SendDescriptive Email.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:String" x:Key="Arg_inSuccessEmailID">[Arg_inSuccessEmailID]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Arg_inEmailBody">[Arg_inEmailDT(5)("HTML").tostring]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Arg_inEmailSubject">[Arg_inEmailDT(5)("Subject").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Arg_inFile">[Arg_inFile]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Arg_inEmailID">[Arg_inEmailID]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Arg_inEmailPassword">[Arg_inEmailPassword]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Arg_inProcessStartTime">[Arg_inProcessStartTime]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:InvokeWorkflowFile>
      </If.Else>
    </If>
    <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[CountofPaymentDT]" DisplayName="Execute Query" sap:VirtualizedContainerService.HintSize="1539,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" ProviderName="System.Data.OleDb" Sql="[&quot;Select Count(STATEMENT_NAME) FROM LBOT_AR_RECEIPT_LOG_MASTER where STATEMENT_NAME like '%&quot;+Path.GetFileName(Arg_inFile.Trim)+&quot;%'&quot;]" ConnectionString="[&quot;Provider=OraOLEDB.Oracle.1;Data Source=&quot;+Arg_inDBDataSource+&quot;;Password=&quot;+Arg_inPassword+&quot;;User ID=&quot;+Arg_inUsername+&quot;&quot;]">
      <ui:ExecuteQuery.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, Argument" />
      </ui:ExecuteQuery.Parameters>
    </ui:ExecuteQuery>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1539,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Count of Payment:-&quot;+CountofPaymentDT(0)(0).tostring +&quot;and Total Payment is&quot; +TotalPayments.ToString.Trim]" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1539,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;LockBox No is:-&quot;+LockboxCreditCount.ToString.Trim]" />
    <If Condition="[CountofPaymentDT(0)(0).tostring.trim.contains(TotalPayments.ToString.trim) OR TotalPayments.Equals(0)]" DisplayName="If Count Mismatch" sap:VirtualizedContainerService.HintSize="1299,256" sap2010:WorkflowViewState.IdRef="If_6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Else>
        <Sequence sap2010:Annotation.AnnotationText="This sequence is used to send email for Count of Payment mismatch" DisplayName="Send Count Mismatch email" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="Sequence_20">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="Email_Subject" />
            <Variable x:TypeArguments="x:String" Name="Email_Body" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_38">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Email_Subject]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Arg_inEmailDT(3)("Subject").ToString.replace("CURRENTTIME",Arg_inProcessStartTime)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_39">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Email_Body]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Arg_inEmailDT(3)("HTML").ToString.replace("CURRENTTIME",Now.ToString("dd-MM-yyyy HH:mm:ss"))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_40">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Email_Body]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Email_Body.ToString.replace("FILEPATH",Path.GetFileName(Arg_inFile))]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_45">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Email_Body]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Email_Body.ToString.replace("TOTALCOUNT",TotalPayments.ToString.Trim)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_46">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Email_Body]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Email_Body.ToString.replace("LOCKBOXCOUNT",LockboxCreditCount.ToString.Trim)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_47">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Email_Body]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[Email_Body.ToString.replace("INSERTEDCOUNT",CountofPaymentDT(0)(0).ToString)]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="This sequence is used to send email for Count of Payment mismatch" Body="[Email_Body]" DisplayName="Send SMTP Mail Message" Email="[Arg_inEmailID]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="314,187" sap2010:WorkflowViewState.IdRef="SendMail_2" IsBodyHtml="True" Password="[Arg_inEmailPassword]" Port="587" SecureConnection="Auto" Server="smtp.gmail.com" Subject="[Email_Subject]" To="[Arg_inSuccessEmailID]">
            <ui:SendMail.Files>
              <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                <InArgument x:TypeArguments="x:String">[Arg_inFile]</InArgument>
              </scg:List>
            </ui:SendMail.Files>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:SendMail>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>