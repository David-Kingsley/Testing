<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1164,2074" sap2010:WorkflowViewState.IdRef="Main_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Diagnostics;assembly=System" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Security</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="784,2009" sap2010:WorkflowViewState.IdRef="Sequence_32">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="out_Config" />
      <Variable x:TypeArguments="ss:SecureString" Name="Gmail_Password" />
      <Variable x:TypeArguments="x:String" Name="Gmail_Username" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="742,1917" sap2010:WorkflowViewState.IdRef="TryCatch_4">
      <TryCatch.Try>
        <Flowchart DisplayName="MainWorkFlow" sap:VirtualizedContainerService.HintSize="704,1690" sap2010:WorkflowViewState.IdRef="Flowchart_1">
          <Flowchart.Variables>
            <Variable x:TypeArguments="x:String" Name="ProcessName" />
            <Variable x:TypeArguments="x:String" Name="ProcessStartTime" />
            <Variable x:TypeArguments="x:String" Name="ProcessEndTime" />
            <Variable x:TypeArguments="s:String[]" Name="ListOfApplicationsInvolved" />
            <Variable x:TypeArguments="x:String" Name="OutputDirectory" />
            <Variable x:TypeArguments="x:String" Name="LogFilePath" />
            <Variable x:TypeArguments="sd1:DataTable" Name="dtFinalOutput" />
            <Variable x:TypeArguments="x:Int32" Name="cnt" />
            <Variable x:TypeArguments="x:String" Name="UniqueInputID" />
            <Variable x:TypeArguments="x:String" Name="ProgramEnvironment" />
            <Variable x:TypeArguments="x:String" Name="ProgramVersion" />
            <Variable x:TypeArguments="x:Boolean" Name="isProcessStop" />
            <Variable x:TypeArguments="ui:GenericValue" Name="ExceptionEmailID" />
            <Variable x:TypeArguments="x:Int32" Name="TransactionItems" />
            <Variable x:TypeArguments="x:String" Name="ConfigFilePath" />
            <Variable x:TypeArguments="ss:SecureString" Name="DBpassword" />
            <Variable x:TypeArguments="x:String" Name="DBusrname" />
            <Variable x:TypeArguments="ss:SecureString" Name="OraclePassword" />
            <Variable x:TypeArguments="x:String" Name="OracleUsername" />
            <Variable x:TypeArguments="sd1:DataTable" Name="PaymentDT" />
            <Variable x:TypeArguments="sd1:DataTable" Name="MappingDT" />
            <Variable x:TypeArguments="sd1:DataTable" Name="PaymentMasterDT" />
            <Variable x:TypeArguments="sd1:DataTable" Name="BankMappingDT" />
            <Variable x:TypeArguments="sd1:DataTable" Name="ProcessedPaymentDT" />
            <Variable x:TypeArguments="sd1:DataTable" Name="EmailDT" />
            <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="MailMsgs" />
            <Variable x:TypeArguments="ss:SecureString" Name="SSH_Password" />
            <Variable x:TypeArguments="x:String" Name="SSH_Username" />
            <Variable x:TypeArguments="ui:GenericValue" Name="SSH_HostName" />
            <Variable x:TypeArguments="ui:GenericValue" Name="Config_FilePath" />
          </Flowchart.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">270,182.5</av:Point>
              <av:Size x:Key="ShapeSize">60,75</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,257.5 300,304.5</av:PointCollection>
              <x:Double x:Key="Width">670</x:Double>
              <x:Double x:Key="Height">1654</x:Double>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Flowchart.StartNode>
            <x:Reference>__ReferenceID10</x:Reference>
          </Flowchart.StartNode>
          <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">200,304.5</av:Point>
                <av:Size x:Key="ShapeSize">200,123</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">300,427.5 300,444.5</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="Initialising Variables ProcessName, ProcessStartTime" DisplayName="Initialising Process Params" sap:VirtualizedContainerService.HintSize="200,123" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign Process Name" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[ProcessName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">["Oracle Finance"]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign Program Version" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[ProgramVersion]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">2018 v12</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign Program Environment" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[ProgramEnvironment]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">Production</InArgument>
                </Assign.Value>
              </Assign>
              <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="Finance_ ConfigFilePath" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="242,22" sap2010:WorkflowViewState.IdRef="GetRobotAsset_5">
                <ui:GetRobotAsset.Value>
                  <OutArgument x:TypeArguments="ui:GenericValue">[Config_FilePath]</OutArgument>
                </ui:GetRobotAsset.Value>
              </ui:GetRobotAsset>
              <Assign DisplayName="Assign ConfigFilePath" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[ConfigFilePath]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Config_FilePath.ToString.Trim]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign ProcessStartTime" sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[ProcessStartTime]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("dd-MM-yyyy HH:mm:ss")]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">200,444.5</av:Point>
                    <av:Size x:Key="ShapeSize">200,138</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">300,582.5 300,596</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap2010:Annotation.AnnotationText="Closing all the applications involved in the process to make environment clear for fresh run" DisplayName="Closing Applications" sap:VirtualizedContainerService.HintSize="200,138" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Clearing Environment By Closing All Applications involved&quot;]" />
                  <Assign DisplayName="Assign ListOfApplications" sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:String[]">[ListOfApplicationsInvolved]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[{"excel","iexplore","jp2launcher"}]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InvokeWorkflowFile ContinueOnError="True" DisplayName="Invoke Kill Apps" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\OtherApps\ClosingApplications.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="s:String[]" x:Key="argApplicationList">[ListOfApplicationsInvolved]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="314,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Start" TargetType="sd:Process">
                    <InArgument x:TypeArguments="x:String">rundll32.exe</InArgument>
                    <InArgument x:TypeArguments="x:String">InetCpl.cpl,ClearMyTracksByProcess 32</InArgument>
                  </InvokeMethod>
                  <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Environment Cleared&quot;]" />
                </Sequence>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">200,596</av:Point>
                        <av:Size x:Key="ShapeSize">200,123</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">300,719 300,733.5</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Sequence sap2010:Annotation.AnnotationText="Reading Input configuration and storing the data in a datatable" DisplayName="Read Input Config" sap:VirtualizedContainerService.HintSize="200,123" sap2010:WorkflowViewState.IdRef="Sequence_22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Config Read&quot;]" />
                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings Workflow File" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="Framework\Input\InitAllSettings.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">[ConfigFilePath]</InArgument>
                          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings","Constants","Assets"}]</InArgument>
                          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[out_Config]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[out_Config.Keys.Count.ToString]" />
                    </Sequence>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">200,733.5</av:Point>
                            <av:Size x:Key="ShapeSize">200,108</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">300,841.5 300,872</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence sap2010:Annotation.AnnotationText="Connecting to orchestrator for configurational details" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="Sequence_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[out_Config(&quot;DB_Credential&quot;).ToString.Trim]" DisplayName="Get DB Credential" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[DBpassword]" Username="[DBusrname]" />
                          <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[out_Config(&quot;Oracle_Credential&quot;).ToString.Trim]" DisplayName="Get Oracle Credential" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[OraclePassword]" Username="[OracleUsername]" />
                          <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[out_Config(&quot;Gmail_Credential&quot;).ToString.Trim]" DisplayName="Get Gmail Credential" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_3" Password="[Gmail_Password]" Username="[Gmail_Username]" />
                          <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="[out_Config(&quot;SSH_Credential&quot;).ToString.Trim]" DisplayName="Get SSH Credential" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="GetRobotCredential_4" Password="[SSH_Password]" Username="[SSH_Username]" />
                          <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[out_Config(&quot;SSH_HostName&quot;).ToString.Trim]" DisplayName="Get SSH Asset" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="GetRobotAsset_4">
                            <ui:GetRobotAsset.Value>
                              <OutArgument x:TypeArguments="ui:GenericValue">[SSH_HostName]</OutArgument>
                            </ui:GetRobotAsset.Value>
                          </ui:GetRobotAsset>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;All Initialized: &quot;+ExceptionEmailID]" />
                        </Sequence>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID7" sap2010:WorkflowViewState.IdRef="FlowStep_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">200,872</av:Point>
                                <av:Size x:Key="ShapeSize">200,108</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">300,980 300,1034</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence sap2010:Annotation.AnnotationText="Creating output directory and logfile" DisplayName=" Creating Output Directory" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="Sequence_17">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Creating Directory&quot;]" />
                              <Assign DisplayName="Assign OutputDirectory Path" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[OutputDirectory]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[out_Config("OutputFolder").ToString+"\"+DateTime.Now.Year.ToString()+"\"+DateTime.Now.ToString("MMM")+"\"+DateTime.Now.ToString("M-d-yyyy")+"\Exec_"+DateTime.Now.ToString("M-d-yyyy_H.m.s")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <If Condition="[NOT(Directory.Exists(OutputDirectory))]" DisplayName="If directory exists" sap:VirtualizedContainerService.HintSize="484,232" sap2010:WorkflowViewState.IdRef="If_1">
                                <If.Then>
                                  <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create directory" sap:VirtualizedContainerService.HintSize="334,84" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[OutputDirectory]" />
                                </If.Then>
                              </If>
                              <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Directory: &quot;+OutputDirectory]" />
                              <Assign DisplayName="Assign LogFilePath Value" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[LogFilePath]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[OutputDirectory+"\LogFile_"+DateTime.Now.ToString("ddMMyyyyHHmmss")+".txt"]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:BuildDataTable DataTable="[dtFinalOutput]" DisplayName="Build data table" sap:VirtualizedContainerService.HintSize="484,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;UniqueInputID&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Description&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;PassOrFail&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Screenshot&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;StartTime&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;StepDetails&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ExceptionMessage&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Framework\Logging\Logging.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="argLogFilePath">[LogFilePath]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="argLogMessage">Log Start After Creating Directory</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="argLogLevel">Info</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="argOutputDirectory">[OutputDirectory]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="argUniqueInputID">TB_1</InArgument>
                                  <InOutArgument x:TypeArguments="sd1:DataTable" x:Key="argDTFinalOutPut">[dtFinalOutput]</InOutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="argStepDetailDescription">Process Initiated</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="argExceptionMessage">NA</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Completed&quot;]" />
                            </Sequence>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_10">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">200,1034</av:Point>
                                    <av:Size x:Key="ShapeSize">200,123</av:Size>
                                    <av:PointCollection x:Key="ConnectorLocation">300,1157 300,1222.5</av:PointCollection>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence sap2010:Annotation.AnnotationText="Reading input data which is required for processing into a datatable" DisplayName="Read Input File" sap:VirtualizedContainerService.HintSize="480,1321" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap:VirtualizedContainerService.HintSize="438,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Framework\Logging\Logging.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="argLogFilePath">[LogFilePath]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="argLogMessage">Reading Input File</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="argLogLevel">Info</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="argOutputDirectory">[OutputDirectory]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="argUniqueInputID">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                      <InOutArgument x:TypeArguments="sd1:DataTable" x:Key="argDTFinalOutPut">[dtFinalOutput]</InOutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="argStepDetailDescription" />
                                      <InArgument x:TypeArguments="x:String" x:Key="argExceptionMessage" />
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                  <Assign DisplayName="Assign counter Value" sap:VirtualizedContainerService.HintSize="438,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[cnt]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="438,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Started&quot;]" />
                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This sequence is used to read all tables,Read Emails(Bank/Check Statments) and add data into Datatabase" DisplayName="Invoke ReadInputData workflow" sap:VirtualizedContainerService.HintSize="438,129" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="Framework/Input/ReadInputData.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="x:String" x:Key="Arg_inLogFilePath">[LogFilePath]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="Arg_inOutputDirectory">[OutputDirectory]</InArgument>
                                      <InOutArgument x:TypeArguments="sd1:DataTable" x:Key="Arg_inoutFinalDT">[dtFinalOutput]</InOutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="Arg_inUniqueID">Reading_input</InArgument>
                                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Arg_inConfig">[out_Config]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="Arg_inDBUsername">[DBusrname]</InArgument>
                                      <InArgument x:TypeArguments="ss:SecureString" x:Key="Arg_inDBPassword">[DBpassword]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="Arg_inOracleUsername">[OracleUsername]</InArgument>
                                      <InArgument x:TypeArguments="ss:SecureString" x:Key="Arg_inOraclePassword">[OraclePassword]</InArgument>
                                      <OutArgument x:TypeArguments="sd1:DataTable" x:Key="Arg_outPaymentDT">[PaymentDT]</OutArgument>
                                      <OutArgument x:TypeArguments="sd1:DataTable" x:Key="PaymentMasterDT">[PaymentMasterDT]</OutArgument>
                                      <OutArgument x:TypeArguments="sd1:DataTable" x:Key="MappingDT">[MappingDT]</OutArgument>
                                      <OutArgument x:TypeArguments="sd1:DataTable" x:Key="BankMappingDT">[BankMappingDT]</OutArgument>
                                      <OutArgument x:TypeArguments="sd1:DataTable" x:Key="ProcessedPaymentDT">[ProcessedPaymentDT]</OutArgument>
                                      <OutArgument x:TypeArguments="sd1:DataTable" x:Key="Arg_outEmailsDT">[EmailDT]</OutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="Arg_inEmailID">[Gmail_Username]</InArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="Arg_inEmailPassword">[new System.Net.NetworkCredential(string.Empty, Gmail_Password).Password]</InArgument>
                                      <OutArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="Arg_outMailMsgs">[MailMsgs]</OutArgument>
                                      <InArgument x:TypeArguments="x:String" x:Key="Arg_inProcessStartTime">[ProcessStartTime]</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:InvokeWorkflowFile>
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="438,540" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch.Try>
                                      <Sequence sap:VirtualizedContainerService.HintSize="304,313" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" sap2010:Annotation.AnnotationText="Sorting Payment Data table on the basis of creation Date Time" ColumnName="CREATION_DATE_TIME" DataTable="[PaymentDT]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="262,79" sap2010:WorkflowViewState.IdRef="SortDataTable_1" Order="Ascending" OutputDataTable="[PaymentDT]" SortOrder="Ascending">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:SortDataTable>
                                        <Assign sap2010:Annotation.AnnotationText="TransactionItems Assigned at 4 for shorter Iteration" DisplayName="Assign Transaction Item" sap:VirtualizedContainerService.HintSize="262,102" sap2010:WorkflowViewState.IdRef="Assign_31">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[TransactionItems]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[PaymentDT.Rows.Count]</InArgument>
                                          </Assign.Value>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Assign>
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_33">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[TransactionItems]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="418,91" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Finished. Transaction Items: &quot;+TransactionItems.ToString]" />
                                </Sequence>
                                <FlowStep.Next>
                                  <FlowDecision x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Checking for loop end" Condition="[Not(cnt&gt;=TransactionItems or isProcessStop)]" sap:VirtualizedContainerService.HintSize="160,118" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <av:Point x:Key="ShapeLocation">220,1222.5</av:Point>
                                        <av:Size x:Key="ShapeSize">160,118</av:Size>
                                        <av:PointCollection x:Key="TrueConnector">220,1281.5 130,1281.5 130,1376</av:PointCollection>
                                        <av:PointCollection x:Key="FalseConnector">380,1281.5 410,1281.5 410,1405 450,1405</av:PointCollection>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <FlowDecision.True>
                                      <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_7">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <av:Point x:Key="ShapeLocation">30,1376</av:Point>
                                            <av:Size x:Key="ShapeSize">200,108</av:Size>
                                            <av:PointCollection x:Key="ConnectorLocation">130,1484 130,1526</av:PointCollection>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence sap2010:Annotation.AnnotationText="Initialising unique input id which is required for reporting" DisplayName="ProcessPreInit" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;The status is: &quot;+(Not(cnt&gt;=TransactionItems or isProcessStop)).ToString]" />
                                          <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[UniqueInputID]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[PaymentDT(cnt)("ST_CUSTOMER_NAME").ToString.Trim.Replace(" ","_")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <av:Point x:Key="ShapeLocation">30,1526</av:Point>
                                                <av:Size x:Key="ShapeSize">200,123</av:Size>
                                                <av:PointCollection x:Key="ConnectorLocation">230,1587.5 300,1587.5 300,1340.5</av:PointCollection>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Sequence sap2010:Annotation.AnnotationText="Calling the main process execution for each data row present in input datatable" DisplayName="MainProcessCall" sap:VirtualizedContainerService.HintSize="200,123" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <TryCatch DisplayName="Try catch" sap:VirtualizedContainerService.HintSize="460,2464" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                                <TryCatch.Try>
                                                  <Sequence DisplayName="Process" sap:VirtualizedContainerService.HintSize="336,726" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="sd1:DataTable" Name="dtOutput" />
                                                    </Sequence.Variables>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Logging workflow file" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Framework\Logging\Logging.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="argLogFilePath">[LogFilePath]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="argLogMessage">["Processing Start For: "+UniqueInputID]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="argLogLevel">Info</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="argOutputDirectory">[OutputDirectory]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="argUniqueInputID">["StepDetails_"+cnt.ToString]</InArgument>
                                                        <InOutArgument x:TypeArguments="sd1:DataTable" x:Key="argDTFinalOutPut">[dtFinalOutput]</InOutArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="argStepDetailDescription">Starting Process for mentioned input by calling Process.xaml</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="argExceptionMessage">NA</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                    <ui:BuildDataTable sap2010:Annotation.AnnotationText="Create an Output Data Table as per the requirement" DataTable="[dtOutput]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="314,86" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Actions&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;WIID&quot; type=&quot;xs:long&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Description&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Type&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Date&quot; type=&quot;xs:dateTime&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:BuildDataTable>
                                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Calling Main Process execution" DisplayName="Invoke  Process workflow file" sap:VirtualizedContainerService.HintSize="314,114" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Process.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inLogFilePath">[LogFilePath]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inOutputDirectory">[OutputDirectory]</InArgument>
                                                        <InOutArgument x:TypeArguments="sd1:DataTable" x:Key="Arg_inoutFinalDT">[dtFinalOutput]</InOutArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inUniqueID">[UniqueInputID]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inDBUSername">[DBusrname]</InArgument>
                                                        <InArgument x:TypeArguments="ss:SecureString" x:Key="Arg_inDBPassword">[DBpassword]</InArgument>
                                                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="Arg_inCofig">[out_Config]</InArgument>
                                                        <InArgument x:TypeArguments="sd1:DataTable" x:Key="PaymentDT">[PaymentDT]</InArgument>
                                                        <InArgument x:TypeArguments="x:Int32" x:Key="cnt">[cnt]</InArgument>
                                                        <InArgument x:TypeArguments="sd1:DataTable" x:Key="MappingDT">[MappingDT]</InArgument>
                                                        <InArgument x:TypeArguments="sd1:DataTable" x:Key="PaymentMasterDT">[PaymentMasterDT]</InArgument>
                                                        <InArgument x:TypeArguments="sd1:DataTable" x:Key="BankMappingDT">[BankMappingDT]</InArgument>
                                                        <InArgument x:TypeArguments="sd1:DataTable" x:Key="ProcessedPaymentDT">[ProcessedPaymentDT]</InArgument>
                                                        <InArgument x:TypeArguments="sd1:DataTable" x:Key="Arg_inEmailDT">[EmailDT]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inOracleUsername">[OracleUsername]</InArgument>
                                                        <InArgument x:TypeArguments="ss:SecureString" x:Key="Arg_inOraclePassword">[OraclePassword]</InArgument>
                                                        <InArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="Arg_inMailMsgs">[MailMsgs]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inSSHUsername">[SSH_Username.ToString.Trim]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inSSHPassword">[new System.Net.NetworkCredential(string.Empty, SSH_Password).Password]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inSSHHostName">[SSH_HostName.ToString.Trim]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inEmailID">[Gmail_Username]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inEmailPassword">[new System.Net.NetworkCredential(string.Empty, Gmail_Password).Password]</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:InvokeWorkflowFile>
                                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Framework\Logging\Logging.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InArgument x:TypeArguments="x:String" x:Key="argLogFilePath">[LogFilePath]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="argLogMessage">["Processing Done For "+UniqueInputID]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="argLogLevel">Info</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="argOutputDirectory">[OutputDirectory]</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="argUniqueInputID">["StepDetail_"+(cnt+1).ToString]</InArgument>
                                                        <InOutArgument x:TypeArguments="sd1:DataTable" x:Key="argDTFinalOutPut">[dtFinalOutput]</InOutArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="argStepDetailDescription">Main Process is Called</InArgument>
                                                        <InArgument x:TypeArguments="x:String" x:Key="argExceptionMessage">NA</InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                    <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="x:Int32">[cnt]</OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="x:Int32">[cnt+1]</InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <ui:ShouldStop DisplayName="Should Stop" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[isProcessStop]" />
                                                  </Sequence>
                                                </TryCatch.Try>
                                                <TryCatch.Catches>
                                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="446,2302" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ActivityAction x:TypeArguments="s:Exception">
                                                      <ActivityAction.Argument>
                                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                      </ActivityAction.Argument>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="440,2233" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                                        <Sequence.Variables>
                                                          <Variable x:TypeArguments="x:Boolean" Name="Successflag" />
                                                        </Sequence.Variables>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap:VirtualizedContainerService.HintSize="418,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="Framework\Exceptions\ExceptionHandling.xaml">
                                                          <ui:InvokeWorkflowFile.Arguments>
                                                            <InArgument x:TypeArguments="x:String" x:Key="argMailList">[out_Config("ExceptionEmailID").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="argMailSubject">["Exception Occurred:- "+PaymentDT(cnt)("RECEIPT_NUMBER").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="argMailBody">["Exception Source:"+exception.Source+Environment.NewLine+"Message: "+exception.Message+Environment.NewLine+"Stack Trace: "+exception.StackTrace]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="argMailTemplatePath">[out_Config("ExceptionEmailTemplate").ToString]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="argOutputDirectory">[OutputDirectory]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="argLogFilePath">[LogFilePath]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="argLogLevel">Error</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="argLogMessage">Exception</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="argUniqueInputID">["Error: "+(cnt+1).ToString]</InArgument>
                                                            <InArgument x:TypeArguments="sd1:DataTable" x:Key="argDTFinalOutPut">[dtFinalOutput]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="argExceptionMessage">["Exception Source:"+exception.Source+Environment.NewLine+"Message: "+exception.Message+Environment.NewLine+"Stack Trace: "+exception.StackTrace]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="argStepDetails">Exception Caught At Process.xaml</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="argEmailUsername">[Gmail_Username]</InArgument>
                                                            <InArgument x:TypeArguments="x:String" x:Key="argEmailPassword">[new System.Net.NetworkCredential(string.Empty, Gmail_Password).Password]</InArgument>
                                                          </ui:InvokeWorkflowFile.Arguments>
                                                        </ui:InvokeWorkflowFile>
                                                        <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="418,22" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="excel" />
                                                        <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="418,22" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="iexplore" />
                                                        <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="418,22" sap2010:WorkflowViewState.IdRef="KillProcess_4" ProcessName="jp2Launcher" />
                                                        <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="418,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                                                        <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="418,132" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Start" TargetType="sd:Process">
                                                          <InArgument x:TypeArguments="x:String">rundll32.exe</InArgument>
                                                          <InArgument x:TypeArguments="x:String">InetCpl.cpl,ClearMyTracksByProcess 32</InArgument>
                                                        </InvokeMethod>
                                                        <If Condition="[exception.Source.Contains(&quot;QueryThe Receipt&quot;)]" sap:VirtualizedContainerService.HintSize="418,51" sap2010:WorkflowViewState.IdRef="If_2">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <If.Then>
                                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="DatabaseOperations\UpdatePaymentTableWithException.xaml">
                                                              <ui:InvokeWorkflowFile.Arguments>
                                                                <InArgument x:TypeArguments="sd1:DataTable" x:Key="Arg_inPaymentDT">[PaymentDT]</InArgument>
                                                                <InArgument x:TypeArguments="x:Int32" x:Key="Arg_inCnt">[cnt]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="Arg_inTransactionStatus">Completed</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="Arg_inTransactionRemarks">Exception occured while uploading attachments</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="Arg_inDBDataSource">[out_Config("DBDataSource").ToString]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="Arg_inUsername">[DBusrname]</InArgument>
                                                                <InArgument x:TypeArguments="x:String" x:Key="Arg_inPassword">[new System.Net.NetworkCredential(string.Empty, DBpassword).Password]</InArgument>
                                                              </ui:InvokeWorkflowFile.Arguments>
                                                            </ui:InvokeWorkflowFile>
                                                          </If.Then>
                                                          <If.Else>
                                                            <If Condition="[exception.Source.Contains(&quot;GenerateCSVFromMacro&quot;)]" sap:VirtualizedContainerService.HintSize="539,235" sap2010:WorkflowViewState.IdRef="If_4">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <If.Then>
                                                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" UnSafe="False" WorkflowFileName="DatabaseOperations\UpdatePaymentTableWithException.xaml">
                                                                  <ui:InvokeWorkflowFile.Arguments>
                                                                    <InArgument x:TypeArguments="sd1:DataTable" x:Key="Arg_inPaymentDT">[PaymentDT]</InArgument>
                                                                    <InArgument x:TypeArguments="x:Int32" x:Key="Arg_inCnt">[cnt]</InArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="Arg_inTransactionStatus">Exception</InArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="Arg_inTransactionRemarks">Exception occured while generating CSV Remit</InArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="Arg_inDBDataSource">[out_Config("DBDataSource").ToString]</InArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="Arg_inUsername">[DBusrname]</InArgument>
                                                                    <InArgument x:TypeArguments="x:String" x:Key="Arg_inPassword">[new System.Net.NetworkCredential(string.Empty, DBpassword).Password]</InArgument>
                                                                  </ui:InvokeWorkflowFile.Arguments>
                                                                </ui:InvokeWorkflowFile>
                                                              </If.Then>
                                                              <If.Else>
                                                                <If Condition="[exception.Source.Contains(&quot;UploadLogiFile &quot;)]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_8">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <If.Then>
                                                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_37" UnSafe="False" WorkflowFileName="DatabaseOperations\UpdatePaymentTableWithException.xaml">
                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                        <InArgument x:TypeArguments="sd1:DataTable" x:Key="Arg_inPaymentDT">[PaymentDT]</InArgument>
                                                                        <InArgument x:TypeArguments="x:Int32" x:Key="Arg_inCnt">[cnt]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inTransactionStatus">Exception</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inTransactionRemarks" xml:space="preserve">Exception occured  during uploading Receipt</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inDBDataSource">[out_Config("DBDataSource").ToString]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inUsername">[DBusrname]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inPassword">[new System.Net.NetworkCredential(string.Empty, DBpassword).Password]</InArgument>
                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                    </ui:InvokeWorkflowFile>
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <If Condition="[exception.Source.Contains(&quot;UploadReceiptFile&quot;)]" sap:VirtualizedContainerService.HintSize="675,486" sap2010:WorkflowViewState.IdRef="If_7">
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <If.Then>
                                                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_38" UnSafe="False" WorkflowFileName="DatabaseOperations\UpdatePaymentTableWithException.xaml">
                                                                          <ui:InvokeWorkflowFile.Arguments>
                                                                            <InArgument x:TypeArguments="sd1:DataTable" x:Key="Arg_inPaymentDT">[PaymentDT]</InArgument>
                                                                            <InArgument x:TypeArguments="x:Int32" x:Key="Arg_inCnt">[cnt]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="Arg_inTransactionStatus">Exception</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="Arg_inTransactionRemarks">Exception occured during Receipt Submit</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="Arg_inDBDataSource">[out_Config("DBDataSource").ToString]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="Arg_inUsername">[DBusrname]</InArgument>
                                                                            <InArgument x:TypeArguments="x:String" x:Key="Arg_inPassword">[new System.Net.NetworkCredential(string.Empty, DBpassword).Password]</InArgument>
                                                                          </ui:InvokeWorkflowFile.Arguments>
                                                                        </ui:InvokeWorkflowFile>
                                                                      </If.Then>
                                                                      <If.Else>
                                                                        <Sequence sap:VirtualizedContainerService.HintSize="336,338" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_39" UnSafe="False" WorkflowFileName="DatabaseOperations\UpdatePaymentTableWithException.xaml">
                                                                            <ui:InvokeWorkflowFile.Arguments>
                                                                              <InArgument x:TypeArguments="sd1:DataTable" x:Key="Arg_inPaymentDT">[PaymentDT]</InArgument>
                                                                              <InArgument x:TypeArguments="x:Int32" x:Key="Arg_inCnt">[cnt]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Arg_inTransactionStatus">Exception</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Arg_inTransactionRemarks">Exception occured due to unknown reasons</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Arg_inDBDataSource">[out_Config("DBDataSource").ToString]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Arg_inUsername">[DBusrname]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Arg_inPassword">[new System.Net.NetworkCredential(string.Empty, DBpassword).Password]</InArgument>
                                                                            </ui:InvokeWorkflowFile.Arguments>
                                                                          </ui:InvokeWorkflowFile>
                                                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_40" UnSafe="False" WorkflowFileName="DatabaseOperations\UpdateMasterTableWithIterationCount.xaml">
                                                                            <ui:InvokeWorkflowFile.Arguments>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Arg_inDBDataSource">[out_Config("DBDataSource").ToString]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Arg_inUsername">[DBusrname]</InArgument>
                                                                              <InArgument x:TypeArguments="x:String" x:Key="Arg_inPassword">[new System.Net.NetworkCredential(string.Empty, DBpassword).Password]</InArgument>
                                                                              <InArgument x:TypeArguments="sd1:DataTable" x:Key="Arg_inPaymentDT">[PaymentDT]</InArgument>
                                                                              <InArgument x:TypeArguments="x:Int32" x:Key="Arg_inCnt">[cnt]</InArgument>
                                                                            </ui:InvokeWorkflowFile.Arguments>
                                                                          </ui:InvokeWorkflowFile>
                                                                        </Sequence>
                                                                      </If.Else>
                                                                    </If>
                                                                  </If.Else>
                                                                </If>
                                                              </If.Else>
                                                            </If>
                                                          </If.Else>
                                                        </If>
                                                        <Delay Duration="00:00:10" sap:VirtualizedContainerService.HintSize="418,22" sap2010:WorkflowViewState.IdRef="Delay_1" />
                                                        <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="418,1309" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <TryCatch.Try>
                                                            <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="358,1082" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:10">
                                                              <ui:RetryScope.ActivityBody>
                                                                <ActivityAction>
                                                                  <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="336,901" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="KillProcess_3" ProcessName="iexplore" />
                                                                    <ui:KillProcess Process="{x:Null}" ContinueOnError="True" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="KillProcess_5" ProcessName="jp2Launcher" />
                                                                    <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Delay_3" />
                                                                    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="314,133" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Start" TargetType="sd:Process">
                                                                      <InArgument x:TypeArguments="x:String">rundll32.exe</InArgument>
                                                                      <InArgument x:TypeArguments="x:String">InetCpl.cpl,ClearMyTracksByProcess 32</InArgument>
                                                                    </InvokeMethod>
                                                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Info" Message="[&quot;Inside Retry Call: Main Process Flow&quot;]" />
                                                                    <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:Boolean">[Successflag]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="OracleOperations\OracleLogin.xaml">
                                                                      <ui:InvokeWorkflowFile.Arguments>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inOracleLoginURL">[out_Config("OracleLogon").ToString]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inUniqueID">[UniqueInputID]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inLogFilePath">[LogFilePath]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inOutputDirectory">[OutputDirectory]</InArgument>
                                                                        <InOutArgument x:TypeArguments="sd1:DataTable" x:Key="Arg_inoutFinalDT">[dtFinalOutput]</InOutArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inOracleUsername">[OracleUsername]</InArgument>
                                                                        <InArgument x:TypeArguments="ss:SecureString" x:Key="Arg_inOraclePassword">[OraclePassword]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inExceptionEmailID">[out_Config("ExceptionEmailID").ToString]</InArgument>
                                                                        <InArgument x:TypeArguments="x:String" x:Key="Arg_inExceptionEmailTemplate">[out_Config("ExceptionEmailTemplate").ToString]</InArgument>
                                                                      </ui:InvokeWorkflowFile.Arguments>
                                                                    </ui:InvokeWorkflowFile>
                                                                    <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:Boolean">[Successflag]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </Sequence>
                                                                </ActivityAction>
                                                              </ui:RetryScope.ActivityBody>
                                                              <ui:RetryScope.Condition>
                                                                <ActivityFunc x:TypeArguments="x:Boolean">
                                                                  <p:IsTrue DisplayName="Is true" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="IsTrue_1" Input="[Successflag]" />
                                                                </ActivityFunc>
                                                              </ui:RetryScope.Condition>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:RetryScope>
                                                          </TryCatch.Try>
                                                          <TryCatch.Catches>
                                                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ActivityAction x:TypeArguments="s:Exception">
                                                                <ActivityAction.Argument>
                                                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                                </ActivityAction.Argument>
                                                                <Sequence sap:VirtualizedContainerService.HintSize="358,1034" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="336,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_41" UnSafe="False" WorkflowFileName="DatabaseOperations\ReadPaymentMasterTableFinal.xaml">
                                                                    <ui:InvokeWorkflowFile.Arguments>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="Arg_inPassword">[new System.Net.NetworkCredential(string.Empty,DBPassword).Password]</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="Arg_inUsername">[DBusrname]</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="Arg_inDBDataSource">[out_Config("DBDataSource").ToString]</InArgument>
                                                                      <OutArgument x:TypeArguments="sd1:DataTable" x:Key="Arg_outPaymentMasterTable">[PaymentMasterDT]</OutArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="Arg_inProcessStartTime">[ProcessStartTime]</InArgument>
                                                                      <InArgument x:TypeArguments="x:String" x:Key="Arg_inProcessEndTime">[ProcessEndTime]</InArgument>
                                                                    </ui:InvokeWorkflowFile.Arguments>
                                                                  </ui:InvokeWorkflowFile>
                                                                  <Assign sap:VirtualizedContainerService.HintSize="336,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:String">[PaymentMasterDT.DefaultView.Sort]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:String">["STATEMENT_NAME,TRANSACTION_STATUS"]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <ui:WriteRange AddHeaders="True" DataTable="[PaymentMasterDT]" DisplayName="Write range" sap:VirtualizedContainerService.HintSize="336,115" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="Sheet1" StartingCell="A1" WorkbookPath="[OutputDirectory+&quot;\ProcessedData.xlsx&quot;]" />
                                                                  <Sequence sap2010:Annotation.AnnotationText="Send Success Email" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="336,496" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                                                    <Sequence.Variables>
                                                                      <Variable x:TypeArguments="x:String" Name="Subject" />
                                                                      <Variable x:TypeArguments="x:String" Name="Email_Body" />
                                                                    </Sequence.Variables>
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[Subject]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">[EmailDT(4)("Subject").ToString.Replace("CURRENTTIME",Now.ToString("dd-MM-yyyy hh:mm:ss")).replace("Run","Exception")]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:String">[Email_Body]</OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:String">[EmailDT(4)("HTML").ToString.Replace("CURRENTTIME",Now.ToString("dd-MM-yyyy hh:mm:ss")).replace("successfully completed","completed unsuccessfully ")]</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[Email_Body]" DisplayName="Send SMTP Mail Message" Email="[Gmail_Username]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="314,145" sap2010:WorkflowViewState.IdRef="SendMail_2" IsBodyHtml="True" Password="[new System.Net.NetworkCredential(string.Empty, Gmail_Password).Password]" Port="587" SecureConnection="Auto" Server="smtp.gmail.com" Subject="[Subject]" To="[out_Config(&quot;SuccessEmailID&quot;).ToString]">
                                                                      <ui:SendMail.Files>
                                                                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                                          <InArgument x:TypeArguments="x:String">[OutputDirectory+"\ProcessedData.xlsx"]</InArgument>
                                                                        </scg:List>
                                                                      </ui:SendMail.Files>
                                                                    </ui:SendMail>
                                                                  </Sequence>
                                                                  <Rethrow sap:VirtualizedContainerService.HintSize="336,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                                                                </Sequence>
                                                              </ActivityAction>
                                                            </Catch>
                                                          </TryCatch.Catches>
                                                        </TryCatch>
                                                        <Assign sap:VirtualizedContainerService.HintSize="418,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:Int32">[cnt]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:Int32">[cnt+1]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </ActivityAction>
                                                  </Catch>
                                                </TryCatch.Catches>
                                              </TryCatch>
                                            </Sequence>
                                            <FlowStep.Next>
                                              <x:Reference>__ReferenceID0</x:Reference>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowDecision.True>
                                    <FlowDecision.False>
                                      <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_8">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <av:Point x:Key="ShapeLocation">450,1336</av:Point>
                                            <av:Size x:Key="ShapeSize">200,138</av:Size>
                                            <av:PointCollection x:Key="ConnectorLocation">550,1474 550,1498.5</av:PointCollection>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence sap2010:Annotation.AnnotationText="Preparing Final HTML Report, Sending Success Email and Creating Final Excel File&#xA;" DisplayName="Data Exhaust" sap:VirtualizedContainerService.HintSize="200,138" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Assign ProcessEndTime" sap:VirtualizedContainerService.HintSize="336,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[ProcessEndTime]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[DateTime.Now.ToString("dd-MM-yyyy HH:mm:ss")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="336,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_42" UnSafe="False" WorkflowFileName="DatabaseOperations\ReadPaymentMasterTableFinal.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="Arg_inPassword">[new System.Net.NetworkCredential(string.Empty,DBPassword).Password]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="Arg_inUsername">[DBusrname]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="Arg_inDBDataSource">[out_Config("DBDataSource").ToString]</InArgument>
                                              <OutArgument x:TypeArguments="sd1:DataTable" x:Key="Arg_outPaymentMasterTable">[PaymentMasterDT]</OutArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="Arg_inProcessStartTime">[ProcessStartTime]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="Arg_inProcessEndTime">[ProcessEndTime]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <Assign sap:VirtualizedContainerService.HintSize="336,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[PaymentMasterDT.DefaultView.Sort]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">["STATEMENT_NAME,TRANSACTION_STATUS"]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:WriteRange AddHeaders="True" DataTable="[PaymentMasterDT]" DisplayName="Write range" sap:VirtualizedContainerService.HintSize="336,115" sap2010:WorkflowViewState.IdRef="WriteRange_4" SheetName="Sheet1" StartingCell="A1" WorkbookPath="[OutputDirectory+&quot;\ProcessedData.xlsx&quot;]" />
                                          <Sequence sap2010:Annotation.AnnotationText="Send Success Email" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="336,496" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="x:String" Name="Subject" />
                                              <Variable x:TypeArguments="x:String" Name="Email_Body" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[Subject]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[EmailDT(4)("Subject").ToString.Replace("CURRENTTIME",ProcessStartTime)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[Email_Body]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[EmailDT(4)("HTML").ToString.Replace("CURRENTTIME",Now.ToString("dd-MM-yyyy HH:mm:ss"))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[Email_Body]" DisplayName="Send SMTP Mail Message" Email="[Gmail_Username]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="314,145" sap2010:WorkflowViewState.IdRef="SendMail_4" IsBodyHtml="True" Password="[new System.Net.NetworkCredential(string.Empty, Gmail_Password).Password]" Port="587" SecureConnection="Auto" Server="smtp.gmail.com" Subject="[Subject]" To="[out_Config(&quot;SuccessEmailID&quot;).ToString]">
                                              <ui:SendMail.Files>
                                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                                  <InArgument x:TypeArguments="x:String">[OutputDirectory+"\ProcessedData.xlsx"]</InArgument>
                                                </scg:List>
                                              </ui:SendMail.Files>
                                            </ui:SendMail>
                                          </Sequence>
                                          <ui:WriteRange AddHeaders="True" DataTable="[dtFinalOutput]" DisplayName="Write range" sap:VirtualizedContainerService.HintSize="336,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" StartingCell="A1" WorkbookPath="[OutputDirectory+&quot;\FinalOutput.xlsx&quot;]" />
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Reporting" sap:VirtualizedContainerService.HintSize="336,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Framework\Reporting\FinalReporting.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="argHTMLReportTemplate">[out_Config("ReportHTMLPath").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="argFinalReportPath">[OutputDirectory+"\FinalOutput.xlsx"]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="argOutputDirectory">[OutputDirectory]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="argProcessName">[ProcessName]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="argProcessStartTime">[ProcessStartTime]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="argProcessEndTime">[ProcessEndTime]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="argLogFilePath">[LogFilePath]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="argProgramVersion">[programversion]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="argEnvironment">[ProgramEnvironment]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap:VirtualizedContainerService.HintSize="336,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Framework\OtherApps\SendSuccessEmail.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="argPRocessName">[ProcessName]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="argProcessStartTime">[ProcessStartTime]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="argProcessEndTime">[ProcessEndTime]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="argReportPath">[OutputDirectory+"\FinalReport.html"]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="argSuccessEmailTemplatePath">[out_Config("SuccessEmailTemplate").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="argSuccessEmailID">[out_Config("SuccessEmailID").ToString]</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_13">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <av:Point x:Key="ShapeLocation">450,1498.5</av:Point>
                                                <av:Size x:Key="ShapeSize">200,138</av:Size>
                                                <av:PointCollection x:Key="ConnectorLocation">310,577.5 310,604.02</av:PointCollection>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Sequence sap2010:Annotation.AnnotationText="Closing all the applications involved in the process to make environment clear for fresh run" DisplayName="Closing Applications" sap:VirtualizedContainerService.HintSize="386,583" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="344,91" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[&quot;Clearing Environment By Closing All Applications involved&quot;]" />
                                              <Assign DisplayName="Assign ListOfApplications" sap:VirtualizedContainerService.HintSize="344,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="s:String[]">[ListOfApplicationsInvolved]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="s:String[]">[{"excel","iexplore","jp2Launcher"}]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:InvokeWorkflowFile ContinueOnError="True" DisplayName="Invoke Kill Apps" sap:VirtualizedContainerService.HintSize="344,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="Framework\OtherApps\ClosingApplications.xaml">
                                                <ui:InvokeWorkflowFile.Arguments>
                                                  <InArgument x:TypeArguments="s:String[]" x:Key="argApplicationList">[ListOfApplicationsInvolved]</InArgument>
                                                </ui:InvokeWorkflowFile.Arguments>
                                              </ui:InvokeWorkflowFile>
                                              <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="344,91" sap2010:WorkflowViewState.IdRef="LogMessage_20" Level="Info" Message="[&quot;Environment Cleared&quot;]" />
                                            </Sequence>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowDecision.False>
                                  </FlowDecision>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
          <x:Reference>__ReferenceID1</x:Reference>
          <x:Reference>__ReferenceID2</x:Reference>
          <x:Reference>__ReferenceID3</x:Reference>
          <x:Reference>__ReferenceID4</x:Reference>
          <x:Reference>__ReferenceID5</x:Reference>
          <x:Reference>__ReferenceID0</x:Reference>
          <x:Reference>__ReferenceID6</x:Reference>
          <x:Reference>__ReferenceID7</x:Reference>
          <x:Reference>__ReferenceID8</x:Reference>
          <x:Reference>__ReferenceID9</x:Reference>
        </Flowchart>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="688,21" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="336,331" sap2010:WorkflowViewState.IdRef="Sequence_31">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Dear All, &quot;+Environment.NewLine+Environment.NewLine+&quot;the process failed due to Unknown Exception. Exception details are below:&quot;+Environment.NewLine+Environment.NewLine+exception.Source+Environment.NewLine+exception.Data.ToString+Environment.NewLine+Environment.NewLine+&quot;Regards,&quot;+Environment.NewLine+&quot;RPA CoE Bot&quot;]" DisplayName="Send SMTP Mail Message" Email="[Gmail_Username]" EnableSSL="True" sap:VirtualizedContainerService.HintSize="314,145" sap2010:WorkflowViewState.IdRef="SendMail_3" IsBodyHtml="True" Password="[new System.Net.NetworkCredential(string.Empty, Gmail_Password).Password]" Port="587" SecureConnection="Auto" Server="smtp.gmail.com" Subject="Super Exception || Oracle Customer Receipt Failed" To="[out_Config(&quot;SuccessEmailID&quot;).ToString]">
                <ui:SendMail.Files>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                </ui:SendMail.Files>
              </ui:SendMail>
              <Rethrow sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>