<Activity mc:Ignorable="sap sap2010 sads" x:Class="GetdetailsfromPDF"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Arg_inoutMappingTable" Type="InArgument(sd:DataTable)" />
    <x:Property Name="Arg_outPaymentDT" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>GetdetailsfromPDF_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.XPS.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Get details from PDF" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="PDFOutput" />
      <Variable x:TypeArguments="s:String[]" Name="Arr" />
      <Variable x:TypeArguments="ui:GenericValue" Name="Str" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="ListData" />
      <Variable x:TypeArguments="x:Int32" Name="index" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="RegexOutput" />
    </Sequence.Variables>
    <ui:ReadPDFText DisplayName="Read PDF Text" FileName="C:\Users\vbhong\Desktop\AMR - Current Day.pdf" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[PDFOutput]" />
    <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[Arr]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[PDFOutput.split({"Bank of America, "},StringSplitOptions.None)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:WriteTextFile DisplayName="Write Text File" FileName="C:\Users\vbhong\Desktop\Untitled.txt" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[PDFOutput]" />
    <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[ListData]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[Arr.ToList]</InArgument>
      </Assign.Value>
    </Assign>
    <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="RemoveAt">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="scg:List(x:String)">[ListData]</InArgument>
      </InvokeMethod.TargetObject>
      <InArgument x:TypeArguments="x:Int32">0</InArgument>
    </InvokeMethod>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[Arr]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[ListData.ToArray]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[Arr]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_17">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:String[]" Name="TableDataArray" />
              <Variable x:TypeArguments="x:String" Name="var_TotalCreditAmount" />
              <Variable x:TypeArguments="x:Object" Name="Count" />
              <Variable x:TypeArguments="x:Object" Name="AccountNo" />
            </Sequence.Variables>
            <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <TryCatch.Try>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[var_TotalCreditAmount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Split(item.ToString,"Credits.?[(][0-9]+[)]",System.Text.RegularExpressions.RegexOptions.Multiline)(1).trim.Split(" "c)(0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:Matches sap2010:WorkflowViewState.IdRef="Matches_2" Input="[PDFOutput]" Pattern="(?m)(?&lt;=\bAs of:)\s*([^\n\r]*)" RegexOption="Compiled" Result="[RegexOutput]" />
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_29">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[AccountNo]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[System.Text.RegularExpressions.Regex.Match(item.ToString,"\d+.?(\|)",System.Text.RegularExpressions.RegexOptions.Multiline)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_30">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[Count]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Object">[System.Text.RegularExpressions.Regex.Split(item.ToString,"Credits.?[(][0-9]+[)]",System.Text.RegularExpressions.RegexOptions.Multiline)(1)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_31">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[Count]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="str:Match">[System.Text.RegularExpressions.Regex.Match(Count.ToString.trim,"\d+([^\d]+)$",System.Text.RegularExpressions.RegexOptions.Multiline)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_32">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[Count]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="str:Match">[System.Text.RegularExpressions.Regex.Match(Count.ToString.trim,"\d+",System.Text.RegularExpressions.RegexOptions.Multiline)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
                    <Assign.To>
                      <OutArgument x:TypeArguments="ui:GenericValue">[Str]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="ui:GenericValue">[item.Replace(System.Environment.NewLine,"")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:String[]">[TableDataArray]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[System.Text.RegularExpressions.Regex.Split(Str.ToString,"Credit.?[(][0-9]+[)]",System.Text.RegularExpressions.RegexOptions.Multiline)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(x:String)">[ListData]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(x:String)">[TableDataArray.ToList]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="RemoveAt">
                    <InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="scg:List(x:String)">[ListData]</InArgument>
                    </InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="x:Int32">0</InArgument>
                  </InvokeMethod>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:String[]">[TableDataArray]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:String[]">[ListData.ToArray]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Credit (Get Amt, BankRef,CustRef,Name)" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[TableDataArray]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="TableRow" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_22">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:String" Name="Amt" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="BankRef" />
                            <Variable x:TypeArguments="s:String[]" Name="StrArr" />
                            <Variable x:TypeArguments="ui:GenericValue" Name="CustName" />
                          </Sequence.Variables>
                          <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[TableRow]" />
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Amt]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[TableRow.Split({"Text"},StringSplitOptions.None)(0).Split(" "c)(1)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:GenericValue">[BankRef]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:GenericValue">[TableRow.Split({"Text"},StringSplitOptions.None)(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:String[]">[StrArr]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:String[]">[BankRef.Split(" "c)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:GenericValue">[BankRef]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:GenericValue">[StrArr(StrArr.Count-2)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
                            <Assign.To>
                              <OutArgument x:TypeArguments="ui:GenericValue">[CustName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="ui:GenericValue">[TableRow.Substring(TableRow.IndexOf("Text")+"Text".Length,TableRow.IndexOf(":")-(TableRow.IndexOf("Text")+"Text".Length))]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Sequence DisplayName="Get Customer Name from Mapping table" sap2010:WorkflowViewState.IdRef="Sequence_24">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="ui:GenericValue" Name="index1" />
                            </Sequence.Variables>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_42">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[index]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[(Arg_inoutMappingTable.Rows.IndexOf(Arg_inoutMappingTable.AsEnumerable().Where(Function(row) System.Text.RegularExpressions.Regex.ISMatch(CustName,row(1).ToString,System.Text.RegularExpressions.RegexOptions.Singleline)).ToArray()(0)))]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                          <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{&quot;Wire&quot;,CustName,Arg_inoutMappingTable(index)(0).tostring,RegexOutput(0).ToString,Amt,Count,var_TotalCreditAmount,BankRef.ToString}]" DataTable="[Arg_outPaymentDT]" DisplayName="Add Data Row" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                          <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute non query" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_1" ProviderName="System.Data.OleDb" Sql="insert into [Sheet1$] (Payment_Type,St_CustomerName,CustomerNumber,ReceiptDate,ReceiptAmount,CustomerRefNo) values (@Value1,@Value2,@Value3,@Value4,@Value5,@Value6)" ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\vbhong\Desktop\Finance\MasterTableStructure;Persist Security Info=True;Extended Properties=&quot;Excel 12.0 Xml;HDR=YES&quot;">
                            <ui:ExecuteNonQuery.Parameters>
                              <InArgument x:TypeArguments="x:String" x:Key="Value1">Wire</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Value2">[CustName]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Value3">[Arg_inoutMappingTable(index)(0).ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Value4">[RegexOutput(0).ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Value5">[Amt]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="Value6">[BankRef]</InArgument>
                            </ui:ExecuteNonQuery.Parameters>
                          </ui:ExecuteNonQuery>
                          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" Text="Data Inserted" TopMost="True" sap2010:WorkflowViewState.IdRef="MessageBox_1" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Rethrow sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <sads:DebugSymbol.Symbol>d0VDOlxVc2Vyc1x2YmhvbmdcRG9jdW1lbnRzXFVpUGF0aFxJZGVhRnJhbWV3b3JrXEdldGRldGFpbHNmcm9tUERGLnhhbWxjXgPLAg4CAQFnBWe7AQMBiAFoBW8OAwGEAXAFcKwBAwGAAXEFeA4CAXx5BX4UAgF4fwWGAQ4CAXOHAQXJAhICAQJnqwFnuAEDAYsBZzpnaQMBigFnoAFnpQEDAYkBbTJtcgMBhwFqM2o4AwGFAXCcAXCpAQMBggFwPnBkAwGBAXY6dkYCAX9zO3NFAgF9fS19LgIBe3s6e0QCAXmEATKEAUQCAXaBATOBATgCAXSHAZABhwGXAQIBcY0BC8YCFgIBA5QBDcUCGAIBBJYBEbkCHAIBBsECFcECTAIBBZcBE54BHAIBbJ8BE58BuwECAWagAROnARwCAWGoAROvARwCAVywARO3ARwCAVe4ARO/ARwCAVLAARPHARwCAU3IARPPARwCAUnQARPXARwCAUXYARPdASICAUHeARPlARwCATzmARO4AiACAQecAT6cAd4BAgFvmQE/mQFWAgFtnwFRnwFeAgFqnwGpAZ8BuAECAWifAWefAYoBAgFnpQE+pQG7AQIBZKIBP6IBSgIBYq0BPq0BygECAV+qAT+qAUYCAV21AT+1AcUBAgFasgE/sgFGAgFYvQE/vQG8AQIBVboBP7oBRgIBU8UBRcUBcgIBUMIBRsIBSwIBTs0BQM0BxwECAUzKAUHKAVECAUrVAUjVAV8CAUjSAUnSAVMCAUbcATvcATwCAUTaAUjaAVICAULjAUDjAVICAT/gAUHgAVECAT3mAcUB5gHXAQIBOuwBGbUCJAIBCPMBG/MBgQECATf0ARv7ASQCATP8ARuDAiQCAS+EAhuLAiQCASuMAhuTAiQCASeUAhubAiQCAR+cAhuoAiYCARqpAhupAsMCAgEWqgIbswIwAgELtAIbtALRAQIBCfMBcvMBfgIBOPkBRvkBigECATb2AUf2AUwCATSBAk2BAoIBAgEy/gFO/gFXAgEwiQJIiQJdAgEuhgJJhgJRAgEskQJNkQJlAgEqjgJOjgJXAgEomQJNmQLIAQIBIpYCTpYCWAIBIKACHacCJgIBG6kC4gGpAvYBAgEYqQJGqQLXAQIBF6oCjgKqAqECAgEVqgLeA6oClAUCARSxAlWxAl4CAROvAlWvAm4CARKqAqYCqgLMAwIBEbACVbACWgIBD60CVa0CXwIBDq4CVa4CfwIBDawCVawCWQIBDLQCgQG0ApABAgEKpQJHpQKzAgIBHqICSKICTwIBHA==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ReadPDFText_1" sap:VirtualizedContainerService.HintSize="456,60" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="456,60" />
      <sap2010:ViewStateData Id="WriteTextFile_1" sap:VirtualizedContainerService.HintSize="456,87" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="456,60" />
      <sap2010:ViewStateData Id="InvokeMethod_1" sap:VirtualizedContainerService.HintSize="456,132" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="456,60" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="352,60" />
      <sap2010:ViewStateData Id="Matches_2" sap:VirtualizedContainerService.HintSize="352,22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="352,60" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="352,60" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="352,60" />
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="352,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="352,60" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="352,60" />
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="352,60" />
      <sap2010:ViewStateData Id="InvokeMethod_4" sap:VirtualizedContainerService.HintSize="352,132" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="352,60" />
      <sap2010:ViewStateData Id="WriteLine_8" sap:VirtualizedContainerService.HintSize="314,61" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="314,184">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataRow_3" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="ExecuteNonQuery_1" sap:VirtualizedContainerService.HintSize="314,88" />
      <sap2010:ViewStateData Id="MessageBox_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="336,1198">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_8" sap:VirtualizedContainerService.HintSize="352,1332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="374,2590">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Rethrow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="418,2817" />
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="440,2941">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_5" sap:VirtualizedContainerService.HintSize="456,3075" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="478,3898">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetdetailsfromPDF_1" sap:VirtualizedContainerService.HintSize="518,3978" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>